shadow$provide.module$node_modules$codemirror$addon$search$matchesonscrollbar=function(P,U,y,L,F){(function(a){"object"==typeof F&&"object"==typeof L?a(y("module$node_modules$codemirror$lib$codemirror"),y("module$node_modules$codemirror$addon$search$searchcursor"),y("module$node_modules$codemirror$addon$scroll$annotatescrollbar")):"function"==typeof define&&define.amd?define(["../../lib/codemirror","./searchcursor","../scroll/annotatescrollbar"],a):a(CodeMirror)})(function(a){function m(a,m,r,z){this.cm=
a;this.options=z;var B={listenForChanges:!1},x;for(x in z)B[x]=z[x];B.className||(B.className="CodeMirror-search-match");this.annotation=a.annotateScrollbar(B);this.query=m;this.caseFold=r;this.gap={from:a.firstLine(),to:a.lastLine()+1};this.matches=[];this.update=null;this.findMatches();this.annotation.update(this.matches);var q=this;a.on("change",this.changeHandler=function(a,b){q.onChange(b)})}function G(a,m,r){return a<=m?a:Math.max(m,a+r)}a.defineExtension("showMatchesOnScrollbar",function(a,
x,r){"string"==typeof r&&(r={className:r});r||(r={});return new m(this,a,x,r)});m.prototype.findMatches=function(){if(this.gap){for(var m=0;m<this.matches.length;m++){var x=this.matches[m];if(x.from.line>=this.gap.to)break;x.to.line>=this.gap.from&&this.matches.splice(m--,1)}for(var r=this.cm.getSearchCursor(this.query,a.Pos(this.gap.from,0),this.caseFold),z=this.options&&this.options.maxMatches||1E3;r.findNext();){x={from:r.from(),to:r.to()};if(x.from.line>=this.gap.to)break;this.matches.splice(m++,
0,x);if(this.matches.length>z)break}this.gap=null}};m.prototype.onChange=function(m){var x=m.from.line,r=a.changeEnd(m).line,z=r-m.to.line;this.gap?(this.gap.from=Math.min(G(this.gap.from,x,z),m.from.line),this.gap.to=Math.max(G(this.gap.to,x,z),m.from.line)):this.gap={from:m.from.line,to:r+1};if(z)for(m=0;m<this.matches.length;m++){r=this.matches[m];var B=G(r.from.line,x,z);B!=r.from.line&&(r.from=a.Pos(B,r.from.ch));B=G(r.to.line,x,z);B!=r.to.line&&(r.to=a.Pos(B,r.to.ch))}clearTimeout(this.update);
var C=this;this.update=setTimeout(function(){C.updateAfterChange()},250)};m.prototype.updateAfterChange=function(){this.findMatches();this.annotation.update(this.matches)};m.prototype.clear=function(){this.cm.off("change",this.changeHandler);this.annotation.clear()}})}
//# sourceMappingURL=module$node_modules$codemirror$addon$search$matchesonscrollbar.js.map
