{"version":3,"file":"com.wsscode.oge.ui.helpers.js","sources":["com/wsscode/oge/ui/helpers.cljs"],"mappings":"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","names":["com.wsscode.oge.ui.helpers/js-get-in","x","path","G__47702","G__47703","goog.object/getValueByKeys","cljs.core/clj->js","cljs.spec.alpha/def-impl","cljs.spec.alpha/fspec-impl","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4","cljs.spec.alpha/cat-impl","cljs.core/any?","cljs.core/vector?","com.wsscode.oge.ui.helpers/html-attr-merge","a","b","cljs.core/map?","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","var_args","args__4502__auto__","len__4499__auto__","i__4500__auto__","argseq__4503__auto__","cljs.core/IndexedSeq","com.wsscode.oge.ui.helpers/props->html","seq47705","G__47706","cljs.core/first","cljs.core/next","self__4486__auto__","attrs","props","p1__47704#","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","cljs.core.apply.cljs$core$IFn$_invoke$arity$4","cljs.core/merge-with","cljs.core.into.cljs$core$IFn$_invoke$arity$3","cljs.core.filter.cljs$core$IFn$_invoke$arity$1","p__47708","vec__47709","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","k","_","cljs.core/simple-keyword?","com.wsscode.oge.ui.helpers/expand-classes","css","classes","clojure.string.join.cljs$core$IFn$_invoke$arity$2","com.wsscode.oge.ui.helpers/strings","strings","p1__47717#","cljs.core.map.cljs$core$IFn$_invoke$arity$2"],"sourcesContent":["(ns com.wsscode.oge.ui.helpers\n  (:require [clojure.string :as str]\n            [goog.object :as gobj]\n            [cljs.spec.alpha :as s]))\n\n(defn js-get-in [x path]\n  (gobj/getValueByKeys x (clj->js path)))\n\n(s/fdef js-get-in\n  :args (s/cat :x any? :path vector?)\n  :ret any?)\n\n(defn html-attr-merge [a b]\n  (cond\n    (map? a) (merge a b)\n    (string? a) (str a \" \" b)\n    :else b))\n\n(s/fdef html-attr-merge\n  :args (s/cat :a any? :b any?)\n  :ret any?)\n\n(defn props->html\n  [attrs & props]\n  (->> (mapv #(dissoc % :react-key) props)\n       (apply merge-with html-attr-merge (dissoc attrs :react-key))\n       (into {} (filter (fn [[k _]] (simple-keyword? k))))\n       (clj->js)))\n\n(defn expand-classes [css classes]\n  {:className (str/join \" \" (mapv css classes))})\n\n(s/fdef expand-classes\n  :args (s/cat :css map? :classes map?)\n  :ret map?)\n\n(defn strings [strings]\n  (->> strings\n       (map #(str \"\\\"\" % \"\\\"\"))\n       (str/join \" \")))\n"]}