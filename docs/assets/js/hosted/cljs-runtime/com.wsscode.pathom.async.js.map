{"version":3,"file":"com.wsscode.pathom.async.js","sources":["com/wsscode/pathom/async.cljc"],"mappings":";;;;;;AASA,uCAAA,vCAAMA,sFAAOC;AAAb,AAAgB,GAAA,EAAA,MAAA,LAAoBA;AAApB,GAAA,EAAA,WAAA,CAAAC,gCAAA,AAAoBD;AAApB;;AAAA,GAAA,EAAA,AAAoBA;AAApB,OAAAE,kCAAYC,uCAAQH;;AAApB;;;;AAAA,OAAAE,kCAAYC,uCAAQH;;;AAEpC,yCAAA,zCAAMI,0FAAeJ;AAArB,AACE,IAAMK,IAAE,AAACC;AAAT,AACE,AAACC,wDAAKF,EAAEL;;AACRK;;AAEJ,4CAAA,5CAAMG,gGAAkBC;AAAxB,AACE,oBAAI,AAACC,gBAAM,+CAAA,WAAAC,1DAACC;AAAD,AAAS,IAAAC,mBAAI,qCAAAF,rCAACZ;AAAL,AAAA,oBAAAc;AAAAA;;AACI,OAACd,qCAAM,AAAA,uFAAAY;;GAAc,AAACG,eAAKL;AACjD,IAAMJ,IAAG,AAACC;IACJS,MAAG,AAACC,wBAAcP;AADxB,AAEE,IAAAQ,yBAAA,AAAAC,mDAAA;AAAA,AAAA,AAAAC,kCAAA;;AAAA,AAAA,IAAAC,mBAAA,iBAAAC,wBAAA;kBAAAC;AAAA,AAAA,IAAAC,kBAAA,CAAAD,YAAA;AAAA,AAAA,GAAA,CAAAC,oBAAA;AAAA,IAAAC,aAAA,CAAAF,YAAA;IAAAA,kBAAAA;AAAA,AAAA,AAAA,IAAAG,uBAAAH;AAAA,AAAA,CAAAG,qBAAA,OAAAD;;AAAA,CAAAC,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAAF,oBAAA;AAAA,IAAAG,aAAA,AAAAC;IAAAC,aAAAF;IAAAJ,kBAAA,iBAAAO,iBAAAP;AAAA,AAAA,CAAAO,eAAA,OAAAD;;AAAAC;;AAAA,AAAA,AAAA,IAAAC,uBAAAR;AAAA,AAAA,CAAAQ,qBAAA,OAAA;;AAAA,CAAAA,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAAP,oBAAA;AAAA,IAAAQ,aAAA,CAAAT,YAAA;IAAAS,iBAAA,CAAAT,YAAA;IAAAA,kBAAA,iBAAAU,iBAAAV;AAAA,AAAA,CAAAU,eAAA,OAAAD;;AAAAC;;AAAA,AAAA,AAAA,oBAAAD;AAAA,IAAAE,uBAAAX;AAAA,AAAA,CAAAW,qBAAA,OAAA;;AAAAA;AAAA,IAAAC,uBAAAZ;AAAA,AAAA,CAAAY,qBAAA,OAAA;;AAAAA;;AAAA;;AAAA,GAAA,CAAAX,oBAAA;AAAA,IAAAY,aAAA,CAAAb,YAAA;IAAAc,aAAA,CAAAd,YAAA;IAAAe,aAAA,8CAAAF,WAAA,yDAAAC,lHAIuC+C;IAJvC7D,kBAAAA;AAAA,AAAA,AAAA,IAAAgB,uBAAAhB;AAAA,AAAA,CAAAgB,qBAAA,OAAAD;;AAAA,CAAAC,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAAf,oBAAA;AAAA,IAAAD,kBAAAA;AAAA,AAAA,AAAA,AAAA,IAAAiB,uBAAAjB;AAAA,AAAA,CAAAiB,qBAAA,OAAA;;AAAAA;;AAAA;;AAAA,GAAA,CAAAhB,oBAAA;AAAA,IAAAK,aAAA,CAAAN,YAAA;IAAAA,kBAAAA;AAAA,AAAA,OAAAkB,2CAAAlB,gBAAA,OAAAM,FAOQvB;;AAPR,GAAA,CAAAkB,oBAAA;AAAA,IAAAD,kBAAAA;AAAA,AAAA,AAAA,IAAAmB,uBAAAnB;AAAA,AAAA,CAAAmB,qBAAA,OAAA;;AAAA,CAAAA,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAAlB,oBAAA;AAAA,IAAAmB,aAAA,CAAApB,YAAA;IAAAA,kBAAAA;AAAA,AAAA,OAAAqB,6CAAArB,gBAAAoB;;AAAA,GAAA,CAAAnB,oBAAA;AAAA,IAAAY,aAAA,CAAAb,YAAA;IAAAsB,aAAA,AAAA,uFAAAT;IAAAb,kBAAAA;AAAA,AAAA,OAAAuB,4CAAAvB,gBAAA,KAAAsB;;AAAA,GAAA,CAAArB,oBAAA;AAAA,IAAAD,kBAAAA;AAAA,AAAA,OAAAuB,4CAAAvB,gBAAA,IACqBP;;AADrB,GAAA,CAAAQ,oBAAA;AAAA,IAAAuB,aAAA,CAAAxB,YAAA;IAAAA,kBAAAA;AAAA,AAAA,AAAA,IAAAyB,uBAAAzB;AAAA,AAAA,CAAAyB,qBAAA,OAAAD;;AAAA,CAAAC,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAAxB,oBAAA;AAAA,IAAAyB,aAAA,CAAA1B,YAAA;IAAAA,kBAAAA;AAAA,AAAA,AAAA,IAAA2B,uBAAA3B;AAAA,AAAA,CAAA2B,qBAAA,OAAAD;;AAAA,CAAAC,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAA1B,oBAAA;AAAA,IAAAY,aAAA,CAAAb,YAAA;IAAA4B,aAAA,AAAA,uFAAAf;IAAAgB,aAAA,qCAAAD,rCAImBnD;IAJnBuB,kBAAAA;AAAA,AAAA,AAAA,oBAAA6B;AAAA,IAAAC,uBAAA9B;AAAA,AAAA,CAAA8B,qBAAA,OAAA;;AAAAA;AAAA,IAAAC,uBAAA/B;AAAA,AAAA,CAAA+B,qBAAA,OAAA;;AAAAA;;AAAA;;AAAA,GAAA,CAAA9B,oBAAA;AAAA,IAAAQ,aAAA,CAAAT,YAAA;IAAAa,aAAA,CAAAb,YAAA;IAAAgC,aAAA,AAAAC,4CAAAxB,WAAA,IAAA;IAAAI,iBAAA,AAAAoB,4CAAAxB,WAAA,IAAA;IAAAyB,aAAA,qCAAArB,rCAGmBpC;IAHnBuB,kBAAA,iBAAAmC,iBAAAnC;AAAA,AAAA,CAAAmC,eAAA,QAAAH;;AAAA,CAAAG,eAAA,OAAAtB;;AAAAsB;;AAAA,AAAA,AAAA,oBAAAD;AAAA,IAAAE,uBAAApC;AAAA,AAAA,CAAAoC,qBAAA,OAAA;;AAAAA;AAAA,IAAAC,uBAAArC;AAAA,AAAA,CAAAqC,qBAAA,OAAA;;AAAAA;;AAAA;;AAAA,GAAA,CAAApC,oBAAA;AAAA,IAAAqC,aAAA,CAAAtC,YAAA;IAAAA,kBAAAA;AAAA,AAAA,AAAA,IAAAuC,uBAAAvC;AAAA,AAAA,CAAAuC,qBAAA,OAAAD;;AAAA,CAAAC,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAAtC,oBAAA;AAAA,IAAAY,aAAA,CAAAb,YAAA;IAAAA,kBAAAA;AAAA,AAAA,AAAA,IAAAwC,uBAAAxC;AAAA,AAAA,CAAAwC,qBAAA,OAAA3B;;AAAA,CAAA2B,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAAvC,oBAAA;AAAA,IAAAK,aAAA,CAAAN,YAAA;IAAAgC,aAAA,CAAAhC,YAAA;IAAAyC,aAAA,CAAAzC,YAAA;IAAA0C,aAAA,8CAAApC,WAAA0B,WAAAS,pEAMcoB;IANdvD,iBAAAoC;IAAA1C,kBAAA,iBAAA2C,iBAAA3C;AAAA,AAAA,CAAA2C,eAAA,OAAArC;;AAAAqC;;AAAA,AAAA,AAAA,IAAAC,uBAAA5C;AAAA,AAAA,CAAA4C,qBAAA,OAAA;;AAAA,CAAAA,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAA3C,oBAAA;AAAA,IAAA4C,aAAA,CAAA7C,YAAA;IAAAA,kBAAAA;AAAA,AAAA,AAAA,IAAA8C,uBAAA9C;AAAA,AAAA,CAAA8C,qBAAA,OAAAD;;AAAA,CAAAC,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAA7C,oBAAA;AAAA,IAAAY,aAAA,CAAAb,YAAA;IAAAA,kBAAAA;AAAA,AAAA,OAAAuB,4CAAAvB,gBAAA,KAAAa;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAA;;;;AAAA,AAAA,IAAAkC,iBAAA,CAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA;AAAA,AAAA,CAAAA,eAAA,OAAAC;;AAAA,CAAAD,eAAA,OAAA;;AAAAA;;6FAAA/C;;AAAA,AAAA,IAAAiD,2BAAA,iBAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA,AAAAnD,sBAAAC;AAAA,AAAA,GAAA,AAAAmD,mCAAAD,sBAAA;AAAA;;AAAAA;;;;gBAAA,GAAA,CAAAE,kBAAAC;AAAA,IAAAC,oBAAAF;AAAA,AAAA,IAAAG,uBAAAvD;AAAA,AAAA,CAAAuD,qBAAA,OAAAD;;AAAAC;AAAA,AAAAC,mDAAAxD;;AAAA;;AAAA,AAAA,MAAAoD;;;;AAAA,AAAA,GAAA,AAAAD,mCAAAF,yBAAA;AAAA,eAAAjD;;;;AAAAiD;;;;;oFAAAjD;;;;;6FAAAA;;;;;;;;;;IAAAyD,uBAAA,iBAAAC,iBAAA,CAAA5D,iDAAAA,mDAAAA;AAAA,AAAA,CAAA4D,eAAAC,AAAA,OAAAhE;;AAAA+D;;AAAA,AAAA,OAAAE,2DAAAH;;;;AAAA9D;AAQAZ;;AACF,OAACD,uCAAcK;;;AAEnB,yCAAA,zCAAM2E,0FAAeC,EAAEC;AAAvB,AACE,IAAArE,mBAAA,AAAAC,mDAAA;AAAA,AAAA,AAAAC,kCAAA;;AAAA,AAAA,IAAAC,mBAAA,iBAAAC,wBAAA;kBAAAkE;AAAA,AAAA,IAAAC,kBAAA,CAAAD,YAAA;AAAA,AAAA,GAAA,CAAAC,oBAAA;AAAA,IAAAC,aAAA,mDAAA,nDACavE;IADbwE,aAAA,uBAAAD,NACQa;AADR,AAG0B;kBAAKvF,IAAGV;AAAR,AACE,IAAAY,uBAAA,AAAAC,mDAAA;AAAA,AAAA,AAAAC,kCAAA;;AAAA,AAAA,IAAAC,mBAAA,iBAAAC,wBAAA;kBAAAmF;AAAA,AAAA,IAAAC,kBAAA,CAAAD,YAAA;AAAA,AAAA,GAAA,CAAAC,oBAAA;AAAA,IAAAC,aAAA,CAAAF,YAAA;IAAAA,kBAAAA;AAAA,AAAA,OAAA3D,4CAAA2D,gBAAA,KAAAE;;AAAA,GAAA,CAAAD,oBAAA;AAAA,IAAAE,aAAA,AACiB5G,qCAAMgB;IADvByF,kBAAAA;AAAA,AAAA,AAAA,oBAAAG;AAAA,IAAAC,uBAAAJ;AAAA,AAAA,CAAAI,qBAAA,OAAA;;AAAAA;AAAA,IAAAC,uBAAAL;AAAA,AAAA,CAAAK,qBAAA,OAAA;;AAAAA;;AAAA;;AAAA,GAAA,CAAAJ,oBAAA;AAAA,IAAAC,aAAA,CAAAF,YAAA;IAAAM,aAAA,CAAAN,YAAA;IAAAE,iBAAA,mEAAAI,0BAAAA,5FAEazB,kCAAAA,8CAAAA;IAFb0B,aAAA,qCAAAL,rCAGe3G;IAHfyG,kBAAA,iBAAAQ,iBAAAR;AAAA,AAAA,CAAAQ,eAAA,OAAAN;;AAAAM;;AAAA,AAAA,AAAA,oBAAAD;AAAA,IAAAE,uBAAAT;AAAA,AAAA,CAAAS,qBAAA,OAAA;;AAAAA;AAAA,IAAAC,uBAAAV;AAAA,AAAA,CAAAU,qBAAA,OAAA;;AAAAA;;AAAA;;AAAA,GAAA,CAAAT,oBAAA;AAAA,IAAAU,aAAA,CAAAX,YAAA;IAAAY,aAAA,AAIGa,4BAAO5H;IAJVmG,kBAAA,iBAAAa,iBAAAb;AAAA,AAAA,CAAAa,eAAA,OAAAF;;AAAAE;;AAAA,AAAA,OAAA1E,6CAAA6D,gBAAAY;;AAAA,GAAA,CAAAX,oBAAA;AAAA,IAAAD,kBAAAA;AAAA,AAAA,AAAA,IAAAc,uBAAAd;AAAA,AAAA,CAAAc,qBAAA,OACmCvG;;AADnC,CAAAuG,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAAb,oBAAA;AAAA,IAAAD,kBAAAA;AAAA,AAAA,OAAA3D,4CAAA2D,gBAAA,IAC+BzF;;AAD/B,GAAA,CAAA0F,oBAAA;AAAA,IAAAc,aAAA,CAAAf,YAAA;IAAAA,kBAAAA;AAAA,AAAA,OAAAhE,2CAAAgE,gBAAA,MAAAe,FAGQlH;;AAHR,GAAA,CAAAoG,oBAAA;AAAA,IAAAe,aAAA,CAAAhB,YAAA;IAAAA,kBAAAA;AAAA,AAAA,AAAA,IAAAiB,uBAAAjB;AAAA,AAAA,CAAAiB,qBAAA,OAAAD;;AAAA,CAAAC,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAAhB,oBAAA;AAAA,IAAAiB,aAAA,CAAAlB,YAAA;IAAAA,kBAAAA;AAAA,AAAA,AAAA,IAAAmB,uBAAAnB;AAAA,AAAA,CAAAmB,qBAAA,OAAAD;;AAAA,CAAAC,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAAlB,oBAAA;AAAA,IAAAC,aAAA,CAAAF,YAAA;IAAAA,kBAAAA;AAAA,AAAA,AAAA,IAAAoB,uBAAApB;AAAA,AAAA,CAAAoB,qBAAA,OAAAlB;;AAAA,CAAAkB,qBAAA,OAAA;;AAAAA;AAAA;;AAAA;;;;;;;;;;;;;AAAA,AAAA;;;;AAAA,AAAA,IAAAC,iBAAA,CAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA;AAAA,AAAA,CAAAA,eAAA,OAAAvD;;AAAA,CAAAuD,eAAA,OAAA;;AAAAA;;0FAAArB;;AAAA,AAAA,IAAAjC,2BAAA,iBAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA,AAAAnD,sBAAAmF;AAAA,AAAA,GAAA,AAAA/B,mCAAAD,sBAAA;AAAA;;AAAAA;;;;gBAAA,GAAA,CAAAsD,kBAAAnD;AAAA,IAAAC,oBAAAkD;AAAA,AAAA,IAAAC,uBAAAvB;AAAA,AAAA,CAAAuB,qBAAA,OAAAnD;;AAAAmD;AAAA,AAAAjD,mDAAA0B;;AAAA;;AAAA,AAAA,MAAAsB;;;;AAAA,AAAA,GAAA,AAAArD,mCAAAF,yBAAA;AAAA,eAAAiC;;;;AAAAjC;;;;;iFAAAiC;;;;;0FAAAA;;;;;;;;;;IAAAzB,uBAAA,iBAAAiD,iBAAA,CAAA5G,iDAAAA,mDAAAA;AAAA,AAAA,CAAA4G,eAAA/C,AAAA,OAAAhE;;AAAA+G;;AAAA,AAAA,OAAA9C,2DAAAH;;;;AAAA9D;;;;IAJ5B0E,aAAA,AAS2B3E,wBAAcsE;IATzCM,aAAA,6DAAA,KAAAH,WAAAC,WAAAC,xFAEKY;IAFLV,aAAA,AAAAC;IAAAC,aAAA,qBAAAF,WAAAJ,hCAUSyC;IAVT3C,kBAAA,iBAAAS,iBAAAT;AAAA,AAAA,CAAAS,eAAA,OAAAJ;;AAAAI;;AAAA,AAAA,OAAAnD,4CAAA0C,gBAAA,IAAAQ;;AAAA,GAAA,CAAAP,oBAAA;AAAA,IAAAS,aAAA,CAAAV,YAAA;IAAAA,kBAAAA;AAAA,AAAA,OAAA5C,6CAAA4C,gBAAAU;;AAAA;;;;;AAAA,AAAA;;;;AAAA,AAAA,IAAAC,iBAAA,CAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA;AAAA,AAAA,CAAAA,eAAA,OAAA5B;;AAAA,CAAA4B,eAAA,OAAA;;AAAAA;;0FAAAX;;AAAA,AAAA,IAAAhB,2BAAA,iBAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA,AAAAnD,sBAAAkE;AAAA,AAAA,GAAA,AAAAd,mCAAAD,sBAAA;AAAA;;AAAAA;;;;gBAAA,GAAA,CAAA2B,kBAAAxB;AAAA,IAAAC,oBAAAuB;AAAA,AAAA,IAAAC,uBAAAb;AAAA,AAAA,CAAAa,qBAAA,OAAAxB;;AAAAwB;AAAA,AAAAtB,mDAAAS;;AAAA;;AAAA,AAAA,MAAAY;;;;AAAA,AAAA,GAAA,AAAA1B,mCAAAF,yBAAA;AAAA,eAAAgB;;;;AAAAhB;;;;;iFAAAgB;;;;;0FAAAA;;;;;;;;;;IAAAR,uBAAA,iBAAAsB,iBAAA,CAAAjF,iDAAAA,mDAAAA;AAAA,AAAA,CAAAiF,eAAApB,AAAA,OAAAhE;;AAAAoF;;AAAA,AAAA,OAAAnB,2DAAAH;;;;AAAA9D;;AAcF,2CAAA,3CAAMkH,8FAAiBC;AAAvB,AACE,qFAA8BC;AAA9B,AACE,IAAMC,QAAM,CAACF,uCAAAA,4CAAAA,PAAOC,wBAAAA;AAApB,AACE,GACE,AAACE,4BAAYD;AAAO,OAAClD,uCAAc5E,0CAAiB8H;;AADtD,GAEE,AAACE,qBAAKF;AAAO,OAAC9H,0CAAiB8H;;AAFjC,AAGQA;;;;;;AAEd,6CAAA,7CAAMG,kGAAmBC;AAAzB,AACE,yFAAgCL,IAAIM;AAApC,iDACM,CAACD,uCAAAA,+CAAAA,VAAOL,2BAAAA,vBAAIM,2BAAAA,7JACZ,OAACnI;;;AAET,wCAAA,2CAAA,qJAAA,xOAAKoI,+LACcT,wJACAM;AAKhB,yCAAA,iDAAAI,1FAAMM;AAAN,AAAA,IAAAL,aAAAD;IAAAC,iBAAA,EAAA,EAAA,EAAA,CAAAA,cAAA,QAAA,EAAA,EAAA,CAAA,AAAAA,iDAAA,WAAA,CAAA7I,gCAAA,AAAA6I,+BAAA,KAAA,OAAA,QAAA,AAAAC,8CAAAC,mBAAAF,YAAAA;UAAAA,NAE+BT;YAF/B,AAAAY,4CAAAH,eAAA,nEAAgCM;UAAhC,AAAAH,4CAAAH,eAAA,jEAAsCO;uBAAtC,AAAAH,4CAAAJ,eAAA,9EACgCQ,yMAEmBG;yBAHnD,AAAAP,4CAAAJ,eAAA,hFACiDS,8MAGE;kBAAKG,EAAE1J;AAAP,AAAUA;;;iBAJ7D,AAAAiJ,4CAAAH,eAAA,xEACoEU;AADpE,AAKE,IAAMG,SAAO,iBAAAC,WAAkB,AAAA,kFAAMP;AAAxB,AAAA,wGAAAO,uCAAAA,vIAACN,iDAAAA,2DAAAA;;IACRO,SAAO,AAACC,6DAASzB;AADvB,AAEE,oBAAI,AAAC0B,wBAAiBF,OAAOF;AAC3B,IAAM3J,IAAE,AAACgK,gBAASH,OAAOF;AAAzB,AACE,oBAAI,AAACM,cAAiBjK;AACpB,OAACoF,uCAAc5E,0CAAiB,AAAC0J,iCAAW7B,IAAIrI;;AAChD,oBAAI,iBAAAmK,oBAAKf;AAAL,AAAA,oBAAAe;AAAW,OAACC,6CAAE,AAACC,eAAKrK,GAAG2E;;AAAvBwF;;;AACF,OAAC3J,0CAAiB,AAAC8J,2DAAO,AAACnF,8CAAMkD,IAAImB,WAAWxJ;;AAChD,IAAAuK,WAAoB,AAAA,kFAAMlB;IAA1BmB,WAA+BxK;AAA/B,AAAA,4GAAAuK,SAAAC,yCAAAD,SAAAC,/JAACjB,mDAAAA,sEAAAA;;;;AANT;;;AAWP;;;uCAAA,vCAAMkB,sFAEHrC;AAFH,AAGE,kBAAKC;AAAL,AACE,IAAMrI,IAAE,CAACoI,uCAAAA,4CAAAA,PAAOC,wBAAAA;AAAhB,AACE,GACE,AAACG,qBAAKxI;AACN,OAACQ,0CAAiBR;;AAFpB,AAKEA;;;;;AAER;;;;;4CAAA,5CAAM0K,gGAIHC;AAJH,AAKE,kBAAAC;AAAA,AAAA,IAAAC,aAAAD;IAAAC,iBAAA,EAAA,EAAA,EAAA,CAAAA,cAAA,QAAA,EAAA,EAAA,CAAA,AAAAA,iDAAA,WAAA,CAAA5K,gCAAA,AAAA4K,+BAAA,KAAA,OAAA,QAAA,AAAA9B,8CAAAC,mBAAA6B,YAAAA;UAAAA,NAAsBxC;UAAtB,AAAAY,4CAAA4B,eAAA,jEAAaxB;AAAb,AACE,GAAI,AAACe,6CAAEO,GAAG,AAACG,oBAAU,AAAA,kGAAezB;AAClC,OAAC7I,0CAAiB,AAAC8J,2DAAOjC;;AAD5B;;;;AAIJ;;;sCAAA,8CAAA0C,pFAAME;AAAN,AAAA,IAAAD,aAAAD;IAAAC,iBAAA,EAAA,EAAA,EAAA,CAAAA,cAAA,QAAA,EAAA,EAAA,CAAA,AAAAA,iDAAA,WAAA,CAAA/K,gCAAA,AAAA+K,+BAAA,KAAA,OAAA,QAAA,AAAAjC,8CAAAC,mBAAAgC,YAAAA;UAAAA,NAIa3C;UAJb,AAAAY,4CAAA+B,eAAA,jEAEc3B;YAFd,AAAAJ,4CAAA+B,eAAA,nEAEkB5B;iBAFlB,AAAAH,4CAAA+B,eAAA,xEAGcxB;AAHd,AAKE,IAAMK,SAAO,AAACC,6DAASzB;AAAvB,AACE,IAAA6C,qBAAe,AAACE,eAAKvB,OAAO,AAAA,kFAAMR;AAAlC,AAAA,oBAAA6B;AAAA,IAAAC,aAAAD;QAAA,AAAA3H,4CAAA4H,WAAA,IAAA,/DAAUzB;QAAV,AAAAnG,4CAAA4H,WAAA,IAAA,/DAAYnL;AAAZ,AACE,GAAI,AAACuI,4BAAYvI;AACf,OAACoF,uCAAc5E,0CAAiB,AAAC0J,iCAAW7B,IAAIrI;;AAChD,oBAAI,iBAAAmK,oBAAK,AAAC3B,qBAAKxI;AAAX,AAAA,GAAAmK;AAAcf;;AAAde;;;AACF,OAAC3J,0CAAiB,AAAC8J,2DAAO,AAACnF,8CAAMkD,IAAImB,WAAWxJ;;AAChDA;;;;AALN;;;AAUJ;;;wCAAA,xCAAMqL,wFAEHhD,IAAIiD;AAFP,AAGE,4IAAA,2CAAA,hLAACC,gDAAQ,CAAA,6DAAsB,AAAWD,uHAAa,AAACE,wGAAO,AAAA,iIAAUnD;;AAE3E,wCAAA,xCAAMoD,wFAAQC;AAAd,AAEW,qBAAWC,bAASD;;AAE/B;;;6CAAA,qDAAAE,lGAAME,2GAEwCpC,EAAEA;AAFhD,AAAA,IAAAmC,aAAAD;IAAAC,iBAAA,EAAA,EAAA,EAAA,CAAAA,cAAA,QAAA,EAAA,EAAA,CAAA,AAAAA,iDAAA,WAAA,CAAA5L,gCAAA,AAAA4L,+BAAA,KAAA,OAAA,QAAA,AAAA9C,8CAAAC,mBAAA6C,YAAAA;UAAAA,NAEyCxD;aAFzC,AAAAY,4CAAA4C,eAAA,pEAEczD;qBAFd,AAAAa,4CAAA4C,eAAA,5EAEqBE;AAFrB,AAAA,kDAAA,sDAIG,iBAAM1D,UAAI,AAAC2D,sCAAgB3D;AAA3B,AACE,IAAA,AACE,IAAMC,QAAM,AAAC4D,kCAAY7D,QAAI,kBAAI0D,gBAAe,CAACA,+CAAAA,uDAAAA,VAAe3D,mCAAAA,SAAQA;AAAxE,AACE,oBAAI,AAACrI,qCAAMuI;AACT,IAAArH,mBAAA,AAAAC,mDAAA;AAAA,AAAA,AAAAC,kCAAA;;AAAA,AAAA,IAAAC,mBAAA,iBAAAC,wBAAA;kBAAA8K;AAAA,AAAA,IAAAC,kBAAA,CAAAD,YAAA;AAAA,AAAA,GAAA,CAAAC,oBAAA;AAAA,IAAAD,kBAAAA;AAAA,AAAA,OAAAtJ,4CAAAsJ,gBAAA,IACc7D;;AADd,GAAA,CAAA8D,oBAAA;AAAA,IAAAC,aAAA,CAAAF,YAAA;IAAAE,iBAAA,CAAAF,YAAA;IAAAG,aAAA,sCAAAD,tCAESZ;IAFTU,kBAAA,iBAAAI,iBAAAJ;AAAA,AAAA,CAAAI,eAAA,OAAAF;;AAAAE;;AAAA,AAAA,AAAA,oBAAAD;AAAA,IAAAE,uBAAAL;AAAA,AAAA,CAAAK,qBAAA,OAAA;;AAAAA;AAAA,IAAAC,uBAAAN;AAAA,AAAA,CAAAM,qBAAA,OAAA;;AAAAA;;AAAA;;AAAA,GAAA,CAAAL,oBAAA;AAAA,IAAAC,aAAA,CAAAF,YAAA;IAAAO,aAAA,8CAAAL,9CAGOhB,sCAAahD;IAHpB8D,kBAAAA;AAAA,AAAA,AAAA,IAAAQ,uBAAAR;AAAA,AAAA,CAAAQ,qBAAA,OAAAD;;AAAA,CAAAC,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAAP,oBAAA;AAAA,IAAAC,aAAA,CAAAF,YAAA;IAAAA,kBAAAA;AAAA,AAAA,AAAA,IAAAS,uBAAAT;AAAA,AAAA,CAAAS,qBAAA,OAAAP;;AAAA,CAAAO,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAAR,oBAAA;AAAA,IAAAS,aAAA,CAAAV,YAAA;IAAAA,kBAAAA;AAAA,AAAA,OAAAxJ,6CAAAwJ,gBAAAU;;AAAA;;;;;;;;AAAA,AAAA;;;;AAAA,AAAA,IAAAC,iBAAA,CAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA;AAAA,AAAA,CAAAA,eAAA,OAAAxI;;AAAA,CAAAwI,eAAA,OAAA;;AAAAA;;8FAAAX;;AAAA,AAAA,IAAA5H,2BAAA,iBAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA,AAAAnD,sBAAA8K;AAAA,AAAA,GAAA,AAAA1H,mCAAAD,sBAAA;AAAA;;AAAAA;;;;gBAAA,GAAA,CAAAuI,kBAAApI;AAAA,IAAAC,oBAAAmI;AAAA,AAAA,IAAAC,uBAAAb;AAAA,AAAA,CAAAa,qBAAA,OAAApI;;AAAAoI;AAAA,AAAAlI,mDAAAqH;;AAAA;;AAAA,AAAA,MAAAY;;;;AAAA,AAAA,GAAA,AAAAtI,mCAAAF,yBAAA;AAAA,eAAA4H;;;;AAAA5H;;;;;qFAAA4H;;;;;8FAAAA;;;;;;;;;;IAAApH,uBAAA,iBAAAkI,iBAAA,CAAA7L,iDAAAA,mDAAAA;AAAA,AAAA,CAAA6L,eAAAhI,AAAA,OAAAhE;;AAAAgM;;AAAA,AAAA,OAAA/H,2DAAAH;;;;AAAA9D;;AAKAqH;;gBARN,QAAA2D,JASuCP;AATvC,AAUI,OAACL,sCAAahD,QAAIqD","names":["com.wsscode.pathom.async/chan?","v","cljs.core/PROTOCOL_SENTINEL","cljs.core/native-satisfies?","cljs.core.async.impl.protocols/Channel","com.wsscode.pathom.async/resolved-chan","c","cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0","cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2","com.wsscode.pathom.async/read-chan-values","m","cljs.core/first","p1__47039#","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","or__3922__auto__","cljs.core/vals","in","cljs.core.async/to-chan","c__33851__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__33852__auto__","switch__32834__auto__","state_47083","state_val_47084","inst_47079","statearr-47085","inst_47040","cljs.core/PersistentHashMap","inst_47041","statearr-47086","statearr-47087","inst_47044","statearr-47088","statearr-47089","statearr-47090","inst_47051","inst_47062","inst_47063","statearr-47091","statearr-47092","cljs.core.async.impl.ioc-helpers/put!","statearr-47095","inst_47081","cljs.core.async.impl.ioc-helpers/return-chan","inst_47060","cljs.core.async.impl.ioc-helpers/take!","inst_47077","statearr-47098","inst_47055","statearr-47100","inst_47057","inst_47058","statearr-47101","statearr-47105","inst_47050","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","inst_47052","statearr-47107","statearr-47108","statearr-47109","inst_47070","statearr-47111","statearr-47112","inst_47072","inst_47073","statearr-47113","statearr-47114","inst_47068","statearr-47116","statearr-47117","state-machine__32835__auto__","ret-value__32836__auto__","result__32837__auto__","cljs.core/keyword-identical?","e47118","js/Object","ex__32838__auto__","statearr-47119","cljs.core.async.impl.ioc-helpers/process-exception","state__33853__auto__","statearr-47120","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","com.wsscode.pathom.async/read-chan-seq","f","s","state_47168","state_val_47169","inst_47159","inst_47160","inst_47161","inst_47162","inst_47163","cljs.core/PersistentVector","inst_47164","statearr-47220","inst_47166","statearr-47221","e47222","statearr-47223","statearr-47225","out","cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4","state_47191","state_val_47192","inst_47179","inst_47172","statearr-47195","statearr-47196","inst_47178","inst_47180","statearr-47197","statearr-47198","statearr-47199","inst_47188","inst_47189","statearr-47201","statearr-47203","inst_47186","inst_47175","statearr-47210","inst_47183","statearr-47211","statearr-47212","statearr-47213","e47216","statearr-47217","statearr-47218","cljs.core.async/close!","cljs.core.async/into","com.wsscode.pathom.async/wrap-read-async","reader","env","value","cljs.core/sequential?","cljs.core/map?","com.wsscode.pathom.async/wrap-parser-async","parser","tx","com.wsscode.pathom.async/async-plugin","p__47269","map__47270","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core.get.cljs$core$IFn$_invoke$arity$3","com.wsscode.pathom.async/js-obj-reader","query","ast","js-key-transform","js-value-transform","entity-key","cljs.core/name","_","js-key","G__47272","entity","com.wsscode.pathom.core.entity.cljs$core$IFn$_invoke$arity$1","goog.object/containsKey","goog.object/get","js/Array.isArray","com.wsscode.pathom.core/join-seq","and__3911__auto__","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/type","com.wsscode.pathom.core.join.cljs$core$IFn$_invoke$arity$1","G__47273","G__47274","com.wsscode.pathom.async/wrap-reader","com.wsscode.pathom.async/placeholder-node","ns","p__47284","map__47285","cljs.core/namespace","p__47289","map__47290","com.wsscode.pathom.async/map-reader","temp__5455__auto__","vec__47295","cljs.core/find","com.wsscode.pathom.async/parser-error","err","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","com.wsscode.pathom.async/error?","e","js/Error","p__47305","map__47306","com.wsscode.pathom.async/async-pathom-read","process-reader","com.wsscode.pathom.core/normalize-env","e47310","com.wsscode.pathom.core/read-from","state_47322","state_val_47323","inst_47314","inst_47315","statearr-47327","statearr-47330","statearr-47333","inst_47317","statearr-47334","statearr-47338","inst_47320","statearr-47339","e47340","statearr-47343","statearr-47344"],"sourcesContent":["(ns com.wsscode.pathom.async\n  #?(:cljs (:require-macros [cljs.core.async.macros :refer [go go-loop]]))\n  (:require [com.wsscode.pathom.core :as p]\n    #?(:clj\n            [clojure.core.async :as async :refer [<! >! put! close! go go-loop]])\n    #?(:cljs [cljs.core.async :as async :refer [<! >! put! close!]])\n    #?(:cljs [goog.object :as gobj])\n            [clojure.core.async.impl.protocols :refer [Channel]]))\n\n(defn chan? [v] (satisfies? Channel v))\n\n(defn resolved-chan [v]\n  (let [c (async/promise-chan)]\n    (put! c v)\n    c))\n\n(defn read-chan-values [m]\n  (if (first (filter #(or (chan? %)\n                          (chan? (:result %))) (vals m)))\n    (let [c  (async/promise-chan)\n          in (async/to-chan m)]\n      (go-loop [out {}]\n        (if-let [[k v] (<! in)]\n          (let [value (cond\n                        (chan? v) (<! v)\n                        (chan? (:result v)) (assoc v :result (<! (:result v)))\n                        :else v)]\n            (recur (assoc out k value)))\n          (>! c out)))\n      c)\n    (resolved-chan m)))\n\n(defn read-chan-seq [f s]\n  (go\n    (let [out (async/chan 64)]\n      (async/pipeline-async 10 out\n                            (fn [in c]\n                              (go\n                                (let [in  (if (chan? in) (<! in) in)\n                                      out (f in)]\n                                  (>! c (if (chan? out) (<! out) out)))\n                                (close! c)))\n                            (async/to-chan s))\n      (<! (async/into [] out)))))\n\n;; Async plugin\n\n(defn wrap-read-async [reader]\n  (fn wrap-read-async-internal [env]\n    (let [value (reader env)]\n      (cond\n        (sequential? value) (read-chan-seq read-chan-values value)\n        (map? value) (read-chan-values value)\n        :else value))))\n\n(defn wrap-parser-async [parser]\n  (fn wrap-parser-async-internal [env tx]\n    (-> (parser env tx)\n        (read-chan-values))))\n\n(def async-plugin\n  {::p/wrap-read   wrap-read-async\n   ::p/wrap-parser wrap-parser-async})\n\n;; BUILT-IN READERS\n\n#?(:cljs\n   (defn js-obj-reader [{:keys    [query ast]\n                         ::p/keys [js-key-transform js-value-transform entity-key]\n                         :as      env\n                         :or      {js-key-transform   name\n                                   js-value-transform (fn [_ v] v)}}]\n     (let [js-key (js-key-transform (:key ast))\n           entity (p/entity env)]\n       (if (gobj/containsKey entity js-key)\n         (let [v (gobj/get entity js-key)]\n           (if (js/Array.isArray v)\n             (read-chan-seq read-chan-values (p/join-seq env v))\n             (if (and query (= (type v) js/Object))\n               (read-chan-values (p/join (assoc env entity-key v)))\n               (js-value-transform (:key ast) v))))\n         ::p/continue))))\n\n;; ALL CODE BELOW THIS COMMENT IS DEPRECATED, USE ASYNC PLUGIN INSTEAD\n\n(defn wrap-reader\n  \"DEPRECATED: use async-plugin\"\n  [reader]\n  (fn [env]\n    (let [v (reader env)]\n      (cond\n        (map? v)\n        (read-chan-values v)\n\n        :else\n        v))))\n\n(defn placeholder-node\n  \"DEPRECATED: use async-plugin\n  Produces a reader that will respond to any keyword with the namespace ns. The join node logical level stays the same\n  as the parent where the placeholder node is requested.\"\n  [ns]\n  (fn [{:keys [ast] :as env}]\n    (if (= ns (namespace (:dispatch-key ast)))\n      (read-chan-values (p/join env))\n      ::p/continue)))\n\n(defn map-reader\n  \"DEPRECATED: use async-plugin\"\n  [{:keys    [ast query]\n    ::p/keys [entity-key]\n    :as      env}]\n  (let [entity (p/entity env)]\n    (if-let [[_ v] (find entity (:key ast))]\n      (if (sequential? v)\n        (read-chan-seq read-chan-values (p/join-seq env v))\n        (if (and (map? v) query)\n          (read-chan-values (p/join (assoc env entity-key v)))\n          v))\n      ::p/continue)))\n\n;; PARSER READER\n\n(defn parser-error\n  \"DEPRECATED: use async-plugin\"\n  [env err]\n  (ex-info (str \"Parser Error: \" (.-message err)) {:path (pr-str (::p/path env))}))\n\n(defn error? [e]\n  #?(:clj  (instance? Throwable e)\n     :cljs (instance? js/Error e)))\n\n(defn async-pathom-read\n  \"DEPRECATED: user async-plugin\"\n  [{::p/keys [reader process-reader] :as env} _ _]\n  {:value\n   (let [env (p/normalize-env env)]\n     (try\n       (let [value (p/read-from env (if process-reader (process-reader reader) reader))]\n         (if (chan? value)\n           (go\n             (let [v (<! value)]\n               (if (error? v)\n                 (parser-error env v)\n                 v)))\n           value))\n       (catch #?(:clj Error :cljs :default) e\n         (parser-error env e))))})\n"]}