{"version":3,"file":"fulcro.tempid.js","sources":["fulcro/tempid.cljc"],"mappings":";;AAOG,AAAA;;;;;;;;;;;;;AAAA,AAAA,AAAA,AAAA,0CAAA,1CAASI;;AAAT,AAAA,YAAA,RAEaI;AAFb,AAGI,OAACC,wGAAOD;;;AAHZ,AAAA,AAAA,iEAAA,jEAASJ,4EAKEI,MAAKE;;AALhB,AAAA,gBAAA,ZAKWF;AALX,AAMI,SAAK,kBAAWJ,jBAAOM,4CACrB,AAACC,6CAAE,AAAGH,aAAU,AAAGE;;;AAPzB,AAAA,AAAA,+DAAA,/DAASN,0EASCI;;AATV,AAAA,gBAAA,ZASUA;AATV,AAUI,GAAM,kBAAA,jBAAMD;AAAZ,AACE,AAAMA,gBAAO,AAACK,eAAKN;;AADrB;;AAEAC;;;AAZJ,AAAA,AAAA,+EAAA,/EAASH,0FAcMS,EAAEC,OAAOD;;AAdxB,AAAA,YAAA,RAceA;AAdf,AAeI,yHAAA,8BAAA,hJAACE,yDAAUD,6EAA2BR;;;AAf1C,AAAA,gCAAA,hCAASF;AAAT,AAAA,0FAAA,oBAAA,oDAAA,2CAAA,0DAAA,cAAA,oBAAA,8DAAA,2CAAA,0DAAA;;;AAAA,AAAA,sCAAA,tCAASA;;AAAT,AAAA,yCAAA,zCAASA;;AAAT,AAAA,8CAAA,WAAAJ,mBAAAC,qBAAAC,jGAASE;AAAT,AAAA,OAAAD,iBAAAF,qBAAA;;;AAAA;;;4BAAA,5BAASI,gEAAkBC,GAAaC;AAAxC,AAAA,YAAAH,qBAA2BE,GAAaC;;;AAA/BH,AAkBT,AAAA,uBAAA,+BAAAY,tDAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC;;;KAAA;AAAA,OAAAA,mDAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,AAAA,qDAAA,rDAAMD;AAAN,AAEG,OAACE,mDAAO,AAACC;;;AAFZ,AAAA,qDAAA,rDAAMH,gEAGFZ;AAHJ,AAIG,YAAAF,wBAAA,HAASE;;;AAJZ,AAAA,+CAAA,/CAAMY;;AAAN,AA0BH,8BAAA,9BAAMI,oEAEHC;AAFH,AAGE,qBAAWnB,bAAOmB","names":["this__4161__auto__","writer__4162__auto__","opt__4163__auto__","cljs.core/-write","fulcro.tempid/TempId","fulcro.tempid/->TempId","id","__hash","this","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","other","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/hash","_","writer","cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic","var_args","G__34191","fulcro.tempid/tempid","js/Error","fulcro.tempid.tempid.cljs$core$IFn$_invoke$arity$1","cljs.core/random-uuid","fulcro.tempid/tempid?","x"],"sourcesContent":["(ns fulcro.tempid\n  #?(:clj (:import [java.io Writer])))\n\n;; =============================================================================\n;; ClojureScript\n\n#?(:cljs\n   (deftype TempId [^:mutable id ^:mutable __hash]\n     Object\n     (toString [this]\n       (pr-str this))\n     IEquiv\n     (-equiv [this other]\n       (and (instance? TempId other)\n         (= (. this -id) (. other -id))))\n     IHash\n     (-hash [this]\n       (when (nil? __hash)\n         (set! __hash (hash id)))\n       __hash)\n     IPrintWithWriter\n     (-pr-writer [_ writer _]\n       (write-all writer \"#fulcro/tempid[\\\"\" id \"\\\"]\"))))\n\n#?(:cljs\n   (defn tempid\n     ([]\n      (tempid (random-uuid)))\n     ([id]\n      (TempId. id nil))))\n\n;; =============================================================================\n;; Clojure\n\n#?(:clj\n   (defrecord TempId [id]\n     Object\n     (toString [this]\n       (pr-str this))))\n\n#?(:clj\n   (defmethod print-method TempId [^TempId x ^Writer writer]\n     (.write writer (str \"#fulcro/tempid[\\\"\" (.id x) \"\\\"]\"))))\n\n#?(:clj\n   (defn tempid\n     ([]\n      (tempid (java.util.UUID/randomUUID)))\n     ([uuid]\n      (TempId. uuid))))\n\n(defn tempid?\n  #?(:cljs {:tag boolean})\n  [x]\n  (instance? TempId x))\n"]}