{
"version":3,
"file":"module$node_modules$d3_quadtree$build$d3_quadtree.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/d3-quadtree/build/d3-quadtree.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_quadtree$build$d3_quadtree\"] = function(global,process,require,module,exports) {\n// https://d3js.org/d3-quadtree/ Version 1.0.3. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don\u2019t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can\u2019t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn\u2019t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nexports.quadtree = quadtree;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","factory","define","amd","d3","add","tree","x","y","d","isNaN","parent","node","_root","leaf","data","x0","_x0","y0","_y0","x1","_x1","y1","_y1","xm","ym","right","bottom","length","i","xp","_x","call","yp","_y","next","Array","j","defaultX","defaultY","quadtree","nodes","Quadtree","NaN","addAll","undefined","leaf_copy","copy","Quad","treeProto","prototype","treeProto.copy","child","source","target","pop","push","tree_add","cover","n","xz","yz","Infinity","tree_cover","Math","floor","z","tree_data","visit","extent","tree_extent","_","arguments","find","tree_find","radius","x2","y2","x3","y3","quads","q","dx","dy","d2","sqrt","remove","tree_remove","previous","retainer","removeAll","root","tree_root","size","tree_size","tree_visit","callback","visitAfter","tree_visitAfter","tree_x","tree_y","Object","defineProperty","value"]
}
