{
"version":3,
"file":"module$node_modules$codemirror$addon$fold$foldcode.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/codemirror/addon/fold/foldcode.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$addon$fold$foldcode\"] = function(global,process,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function doFold(cm, pos, options, force) {\n    if (options && options.call) {\n      var finder = options;\n      options = null;\n    } else {\n      var finder = getOption(cm, options, \"rangeFinder\");\n    }\n    if (typeof pos == \"number\") pos = CodeMirror.Pos(pos, 0);\n    var minSize = getOption(cm, options, \"minFoldSize\");\n\n    function getRange(allowFolded) {\n      var range = finder(cm, pos);\n      if (!range || range.to.line - range.from.line < minSize) return null;\n      var marks = cm.findMarksAt(range.from);\n      for (var i = 0; i < marks.length; ++i) {\n        if (marks[i].__isFold && force !== \"fold\") {\n          if (!allowFolded) return null;\n          range.cleared = true;\n          marks[i].clear();\n        }\n      }\n      return range;\n    }\n\n    var range = getRange(true);\n    if (getOption(cm, options, \"scanUp\")) while (!range && pos.line > cm.firstLine()) {\n      pos = CodeMirror.Pos(pos.line - 1, 0);\n      range = getRange(false);\n    }\n    if (!range || range.cleared || force === \"unfold\") return;\n\n    var myWidget = makeWidget(cm, options);\n    CodeMirror.on(myWidget, \"mousedown\", function(e) {\n      myRange.clear();\n      CodeMirror.e_preventDefault(e);\n    });\n    var myRange = cm.markText(range.from, range.to, {\n      replacedWith: myWidget,\n      clearOnEnter: getOption(cm, options, \"clearOnEnter\"),\n      __isFold: true\n    });\n    myRange.on(\"clear\", function(from, to) {\n      CodeMirror.signal(cm, \"unfold\", cm, from, to);\n    });\n    CodeMirror.signal(cm, \"fold\", cm, range.from, range.to);\n  }\n\n  function makeWidget(cm, options) {\n    var widget = getOption(cm, options, \"widget\");\n    if (typeof widget == \"string\") {\n      var text = document.createTextNode(widget);\n      widget = document.createElement(\"span\");\n      widget.appendChild(text);\n      widget.className = \"CodeMirror-foldmarker\";\n    } else if (widget) {\n      widget = widget.cloneNode(true)\n    }\n    return widget;\n  }\n\n  // Clumsy backwards-compatible interface\n  CodeMirror.newFoldFunction = function(rangeFinder, widget) {\n    return function(cm, pos) { doFold(cm, pos, {rangeFinder: rangeFinder, widget: widget}); };\n  };\n\n  // New-style interface\n  CodeMirror.defineExtension(\"foldCode\", function(pos, options, force) {\n    doFold(this, pos, options, force);\n  });\n\n  CodeMirror.defineExtension(\"isFolded\", function(pos) {\n    var marks = this.findMarksAt(pos);\n    for (var i = 0; i < marks.length; ++i)\n      if (marks[i].__isFold) return true;\n  });\n\n  CodeMirror.commands.toggleFold = function(cm) {\n    cm.foldCode(cm.getCursor());\n  };\n  CodeMirror.commands.fold = function(cm) {\n    cm.foldCode(cm.getCursor(), null, \"fold\");\n  };\n  CodeMirror.commands.unfold = function(cm) {\n    cm.foldCode(cm.getCursor(), null, \"unfold\");\n  };\n  CodeMirror.commands.foldAll = function(cm) {\n    cm.operation(function() {\n      for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n        cm.foldCode(CodeMirror.Pos(i, 0), null, \"fold\");\n    });\n  };\n  CodeMirror.commands.unfoldAll = function(cm) {\n    cm.operation(function() {\n      for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n        cm.foldCode(CodeMirror.Pos(i, 0), null, \"unfold\");\n    });\n  };\n\n  CodeMirror.registerHelper(\"fold\", \"combine\", function() {\n    var funcs = Array.prototype.slice.call(arguments, 0);\n    return function(cm, start) {\n      for (var i = 0; i < funcs.length; ++i) {\n        var found = funcs[i](cm, start);\n        if (found) return found;\n      }\n    };\n  });\n\n  CodeMirror.registerHelper(\"fold\", \"auto\", function(cm, start) {\n    var helpers = cm.getHelpers(start, \"fold\");\n    for (var i = 0; i < helpers.length; i++) {\n      var cur = helpers[i](cm, start);\n      if (cur) return cur;\n    }\n  });\n\n  var defaultOptions = {\n    rangeFinder: CodeMirror.fold.auto,\n    widget: \"\\u2194\",\n    minFoldSize: 0,\n    scanUp: false,\n    clearOnEnter: true\n  };\n\n  CodeMirror.defineOption(\"foldOptions\", null);\n\n  function getOption(cm, options, name) {\n    if (options && options[name] !== undefined)\n      return options[name];\n    var editorOptions = cm.options.foldOptions;\n    if (editorOptions && editorOptions[name] !== undefined)\n      return editorOptions[name];\n    return defaultOptions[name];\n  }\n\n  CodeMirror.defineExtension(\"foldOption\", function(options, name) {\n    return getOption(this, options, name);\n  });\n});\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","mod","define","amd","CodeMirror","doFold","cm","pos","options","force","getRange","allowFolded","range","finder","to","line","from","minSize","marks","findMarksAt","i","length","__isFold","cleared","clear","call","getOption","Pos","firstLine","myWidget","makeWidget","on","e","myRange","e_preventDefault","markText","replacedWith","clearOnEnter","signal","widget","text","document","createTextNode","createElement","appendChild","className","cloneNode","name","undefined","editorOptions","foldOptions","defaultOptions","newFoldFunction","CodeMirror.newFoldFunction","rangeFinder","defineExtension","commands","toggleFold","CodeMirror.commands.toggleFold","foldCode","getCursor","fold","CodeMirror.commands.fold","unfold","CodeMirror.commands.unfold","foldAll","CodeMirror.commands.foldAll","operation","lastLine","unfoldAll","CodeMirror.commands.unfoldAll","registerHelper","funcs","Array","prototype","slice","arguments","start","found","helpers","getHelpers","cur","auto","minFoldSize","scanUp","defineOption"]
}
