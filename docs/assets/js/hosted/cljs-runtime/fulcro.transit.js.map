{"version":3,"file":"fulcro.transit.js","sources":["fulcro/transit.cljc"],"mappings":";;;;;AAYG,AAAA;;;;;;AAAA,AAAA,AAAA,AAAA,6CAAA,7CAASI,wDAECE;;AAFV,AAAA,YAAA,RAEQA;AAFR,AAAA;;;AAAA,AAAA,AAAA,6CAAA,7CAASF,wDAGCG;;AAHV,AAAA,QAAA,JAGQD;AAHR,AAGa,OAAGC;;;AAHhB,AAAA,AAAA,mDAAA,nDAASH,8DAIOE;;AAJhB,AAAA,YAAA,RAIcA;AAJd,AAAA;;;AAAA,AAAA,wCAAA,xCAASF;AAAT,AAAA;;;AAAA,AAAA,8CAAA,9CAASA;;AAAT,AAAA,iDAAA,jDAASA;;AAAT,AAAA,sDAAA,WAAAJ,mBAAAC,qBAAAC,zGAASE;AAAT,AAAA,OAAAD,iBAAAF,qBAAA;;;AAAA;;;oCAAA,pCAASI;AAAT,AAAA,YAAAD;;;AAASA,AAeT,AAAA,wBAAA,gCAAAI,xDAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC;;;KAAA;AAAA,OAAAA,oDAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,AAAA,sDAAA,tDAAMD;AAAN,AAEG,2DAAA,pDAACE;;;AAFJ,AAAA,sDAAA,tDAAMF,iEAGFG;AAHJ,AAIG,8DAAA,vDAACC,4GACC,wBAAA,mFAAA,3GAACC,mBAASF,mJAAgBG,6BAAQ,KAAAZ;;;AALvC,AAAA,gDAAA,hDAAMM;;AAAN,AAgBA,AAAA,wBAAA,gCAAAF,xDAAMU;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC;;;KAAA;AAAA,OAAAA,oDAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAP,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,AAAA,sDAAA,tDAAMO;AAAN,AAEG,2DAAA,pDAACC;;;AAFJ,AAAA,sDAAA,tDAAMD,iEAGFL;AAHJ,AAIG,8DAAA,vDAACO,4GACC,wBAAA,mFAAA,2DAAA,tKAACL,mBAASF,2KAER,WAAKQ;AAAL,AAAS,OAACC,mDAAcD;;;;AAP/B,AAAA,gDAAA,hDAAMH;;AAAN,AAqBH;;;qCAAA,rCAAMK,kFAEHC;AAFH,AAOW,IAAA,AACE,AAAQ,AAACE,4DAAQF;;AADnB;gBAAA,QAAAC,JAGkBE;AAHlB,AAAA;;AAKX","names":["this__4161__auto__","writer__4162__auto__","opt__4163__auto__","cljs.core/-write","fulcro.transit/TempIdHandler","fulcro.transit/->TempIdHandler","_","r","var_args","G__35554","fulcro.transit/writer","js/Error","fulcro.transit.writer.cljs$core$IFn$_invoke$arity$1","opts","cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2","cljs.core/assoc-in","fulcro.tempid/TempId","G__35566","fulcro.transit/reader","fulcro.transit.reader.cljs$core$IFn$_invoke$arity$1","cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2","id","fulcro.tempid.tempid.cljs$core$IFn$_invoke$arity$1","fulcro.transit/serializable?","v","e35581","fulcro.transit.writer.cljs$core$IFn$_invoke$arity$0","e"],"sourcesContent":["(ns fulcro.transit\n  #?(:clj\n     (:refer-clojure :exclude [ref]))\n  (:require [cognitect.transit :as t]\n    #?(:cljs [com.cognitect.transit :as ct])\n            [fulcro.tempid :as tempid #?@(:cljs [:refer [TempId]])])\n  #?(:clj\n     (:import [com.cognitect.transit\n               TransitFactory WriteHandler ReadHandler]\n              [fulcro.tempid TempId])))\n\n#?(:cljs\n   (deftype TempIdHandler []\n     Object\n     (tag [_ _] \"fulcro/tempid\")\n     (rep [_ r] (. r -id))\n     (stringRep [_ _] nil)))\n\n#?(:clj\n   (deftype TempIdHandler []\n     WriteHandler\n     (tag [_ _] \"fulcro/tempid\")\n     (rep [_ r] (. ^TempId r -id))\n     (stringRep [_ r] (. ^TempId r -id))\n     (getVerboseHandler [_] nil)))\n\n#?(:cljs\n   (defn writer\n     ([]\n      (writer {}))\n     ([opts]\n      (t/writer :json\n        (assoc-in opts [:handlers TempId] (TempIdHandler.))))))\n\n#?(:clj\n   (defn writer\n     ([out]\n      (writer out {}))\n     ([out opts]\n      (t/writer out :json\n        (assoc-in opts [:handlers TempId] (TempIdHandler.))))))\n\n#?(:cljs\n   (defn reader\n     ([]\n      (reader {}))\n     ([opts]\n      (t/reader :json\n        (assoc-in opts\n          [:handlers \"fulcro/tempid\"]\n          (fn [id] (tempid/tempid id)))))))\n\n#?(:clj\n   (defn reader\n     ([in]\n      (reader in {}))\n     ([in opts]\n      (t/reader in :json\n        (assoc-in opts\n          [:handlers \"fulcro/tempid\"]\n          (reify\n            ReadHandler\n            (fromRep [_ id] (TempId. id))))))))\n\n(defn serializable?\n  \"Checks to see that the value in question can be serialized by the default fulcro writer.\"\n  [v]\n  #?(:clj  (try\n             (.write (writer (java.io.ByteArrayOutputStream.)) v)\n             true\n             (catch Exception e false))\n     :cljs (try\n             (.write (writer) v)\n             true\n             (catch :default e false))))\n\n(comment\n  ;; cljs\n  (t/read (reader) (t/write (writer) (tempid/tempid)))\n\n  ;; clj\n  (import '[java.io ByteArrayOutputStream ByteArrayInputStream])\n\n  (def baos (ByteArrayOutputStream. 4096))\n  (def w (writer baos))\n  (t/write w (TempId. (java.util.UUID/randomUUID)))\n  (.toString baos)\n\n  (def in (ByteArrayInputStream. (.toByteArray baos)))\n  (def r (reader in))\n  (t/read r)\n  )\n"]}