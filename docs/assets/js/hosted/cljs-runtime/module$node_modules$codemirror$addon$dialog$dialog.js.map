{
"version":3,
"file":"module$node_modules$codemirror$addon$dialog$dialog.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/codemirror/addon/dialog/dialog.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$addon$dialog$dialog\"] = function(global,process,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Open simple dialogs on top of an editor. Relies on dialog.css.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  function dialogDiv(cm, template, bottom) {\n    var wrap = cm.getWrapperElement();\n    var dialog;\n    dialog = wrap.appendChild(document.createElement(\"div\"));\n    if (bottom)\n      dialog.className = \"CodeMirror-dialog CodeMirror-dialog-bottom\";\n    else\n      dialog.className = \"CodeMirror-dialog CodeMirror-dialog-top\";\n\n    if (typeof template == \"string\") {\n      dialog.innerHTML = template;\n    } else { // Assuming it's a detached DOM element.\n      dialog.appendChild(template);\n    }\n    return dialog;\n  }\n\n  function closeNotification(cm, newVal) {\n    if (cm.state.currentNotificationClose)\n      cm.state.currentNotificationClose();\n    cm.state.currentNotificationClose = newVal;\n  }\n\n  CodeMirror.defineExtension(\"openDialog\", function(template, callback, options) {\n    if (!options) options = {};\n\n    closeNotification(this, null);\n\n    var dialog = dialogDiv(this, template, options.bottom);\n    var closed = false, me = this;\n    function close(newVal) {\n      if (typeof newVal == 'string') {\n        inp.value = newVal;\n      } else {\n        if (closed) return;\n        closed = true;\n        dialog.parentNode.removeChild(dialog);\n        me.focus();\n\n        if (options.onClose) options.onClose(dialog);\n      }\n    }\n\n    var inp = dialog.getElementsByTagName(\"input\")[0], button;\n    if (inp) {\n      inp.focus();\n\n      if (options.value) {\n        inp.value = options.value;\n        if (options.selectValueOnOpen !== false) {\n          inp.select();\n        }\n      }\n\n      if (options.onInput)\n        CodeMirror.on(inp, \"input\", function(e) { options.onInput(e, inp.value, close);});\n      if (options.onKeyUp)\n        CodeMirror.on(inp, \"keyup\", function(e) {options.onKeyUp(e, inp.value, close);});\n\n      CodeMirror.on(inp, \"keydown\", function(e) {\n        if (options && options.onKeyDown && options.onKeyDown(e, inp.value, close)) { return; }\n        if (e.keyCode == 27 || (options.closeOnEnter !== false && e.keyCode == 13)) {\n          inp.blur();\n          CodeMirror.e_stop(e);\n          close();\n        }\n        if (e.keyCode == 13) callback(inp.value, e);\n      });\n\n      if (options.closeOnBlur !== false) CodeMirror.on(inp, \"blur\", close);\n    } else if (button = dialog.getElementsByTagName(\"button\")[0]) {\n      CodeMirror.on(button, \"click\", function() {\n        close();\n        me.focus();\n      });\n\n      if (options.closeOnBlur !== false) CodeMirror.on(button, \"blur\", close);\n\n      button.focus();\n    }\n    return close;\n  });\n\n  CodeMirror.defineExtension(\"openConfirm\", function(template, callbacks, options) {\n    closeNotification(this, null);\n    var dialog = dialogDiv(this, template, options && options.bottom);\n    var buttons = dialog.getElementsByTagName(\"button\");\n    var closed = false, me = this, blurring = 1;\n    function close() {\n      if (closed) return;\n      closed = true;\n      dialog.parentNode.removeChild(dialog);\n      me.focus();\n    }\n    buttons[0].focus();\n    for (var i = 0; i < buttons.length; ++i) {\n      var b = buttons[i];\n      (function(callback) {\n        CodeMirror.on(b, \"click\", function(e) {\n          CodeMirror.e_preventDefault(e);\n          close();\n          if (callback) callback(me);\n        });\n      })(callbacks[i]);\n      CodeMirror.on(b, \"blur\", function() {\n        --blurring;\n        setTimeout(function() { if (blurring <= 0) close(); }, 200);\n      });\n      CodeMirror.on(b, \"focus\", function() { ++blurring; });\n    }\n  });\n\n  /*\n   * openNotification\n   * Opens a notification, that can be closed with an optional timer\n   * (default 5000ms timer) and always closes on click.\n   *\n   * If a notification is opened while another is opened, it will close the\n   * currently opened one and open the new one immediately.\n   */\n  CodeMirror.defineExtension(\"openNotification\", function(template, options) {\n    closeNotification(this, close);\n    var dialog = dialogDiv(this, template, options && options.bottom);\n    var closed = false, doneTimer;\n    var duration = options && typeof options.duration !== \"undefined\" ? options.duration : 5000;\n\n    function close() {\n      if (closed) return;\n      closed = true;\n      clearTimeout(doneTimer);\n      dialog.parentNode.removeChild(dialog);\n    }\n\n    CodeMirror.on(dialog, 'click', function(e) {\n      CodeMirror.e_preventDefault(e);\n      close();\n    });\n\n    if (duration)\n      doneTimer = setTimeout(close, duration);\n\n    return close;\n  });\n});\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","mod","define","amd","CodeMirror","dialogDiv","cm","template","bottom","dialog","getWrapperElement","wrap","appendChild","document","createElement","className","innerHTML","closeNotification","newVal","state","currentNotificationClose","defineExtension","callback","options","close","inp","value","closed","onClose","parentNode","removeChild","me","focus","getElementsByTagName","selectValueOnOpen","select","onInput","on","e","onKeyUp","onKeyDown","keyCode","closeOnEnter","blur","e_stop","closeOnBlur","button","callbacks","buttons","blurring","i","length","b","e_preventDefault","setTimeout","clearTimeout","doneTimer","duration"]
}
