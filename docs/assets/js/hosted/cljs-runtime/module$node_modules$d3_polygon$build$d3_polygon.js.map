{
"version":3,
"file":"module$node_modules$d3_polygon$build$d3_polygon.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/d3-polygon/build/d3-polygon.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_polygon$build$d3_polygon\"] = function(global,process,require,module,exports) {\n// https://d3js.org/d3-polygon/ Version 1.0.3. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar area = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","factory","define","amd","d3","lexicographicOrder","a","b","computeUpperHullIndexes","points","n","length","indexes","size","i","cross","slice","c","polygonArea","area","polygon","polygonCentroid","centroid","x","y","k","polygonHull","hull","sortedPoints","Array","flippedPoints","sort","upperIndexes","lowerIndexes","skipLeft","skipRight","push","polygonContains","contains","point","p","x0","y0","x1","inside","y1","polygonLength","xb","yb","perimeter","xa","ya","Math","sqrt","Object","defineProperty","value"]
}
