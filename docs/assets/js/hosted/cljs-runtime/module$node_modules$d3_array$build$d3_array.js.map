{
"version":3,
"file":"module$node_modules$d3_array$build$d3_array.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/d3-array/build/d3-array.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_array$build$d3_array\"] = function(global,process,require,module,exports) {\n// https://d3js.org/d3-array/ Version 1.2.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar quantile = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","factory","define","amd","d3","ascendingComparator","f","d","x","ascending","pair","a","b","tickIncrement","start","stop","count","step","Math","max","power","floor","log","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","length","NaN","bisector","compare","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","number","variance","values","valueof","n","m","i","mean","value","sum","isNaN","delta","deviation","array","v","sqrt","extent","min","Array","prototype","slice","map","constant","identity","range","arguments","ceil","sturges","LN2","quantile","p","i0","value0","value1","transpose","matrix","j","row","bisect","cross","values0","values1","reduce","n0","n1","i1","descending","histogram","data","xz","domain","x0","x1","tz","threshold","isArray","shift","pop","bins","bin","push","histogram.value","_","histogram.domain","thresholds","histogram.thresholds","call","thresholdFreedmanDiaconis","freedmanDiaconis","sort","thresholdScott","scott","thresholdSturges","median","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","t","random","ticks","reverse","isFinite","zip","Object","defineProperty"]
}
