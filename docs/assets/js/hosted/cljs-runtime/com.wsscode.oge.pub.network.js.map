{"version":3,"file":"com.wsscode.oge.pub.network.js","sources":["com/wsscode/oge/pub/network.cljs"],"mappings":"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","names":["com.wsscode.oge.pub.network/request-transform","req","token","G__47862","cljs.core/assoc-in","var_args","args__4502__auto__","len__4499__auto__","i__4500__auto__","argseq__4503__auto__","cljs.core/IndexedSeq","com.wsscode.oge.pub.network/network-error-callback","seq47863","self__4487__auto__","cljs.core/seq","args","js/console.log","this__12534__auto__","k__12535__auto__","cljs.core._lookup.cljs$core$IFn$_invoke$arity$3","this__12536__auto__","k47877","else__12537__auto__","G__47889","cljs.core/Keyword","url-atom","network","cljs.core.get.cljs$core$IFn$_invoke$arity$3","__extmap","this__12548__auto__","writer__12549__auto__","opts__12550__auto__","pr-pair__12551__auto__","keyval__12552__auto__","cljs.core/pr-sequential-writer","cljs.core/pr-writer","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core/PersistentVector","G__47876","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__12532__auto__","__meta","this__12529__auto__","__hash","this__12538__auto__","cljs.core/count","this__12530__auto__","h__4030__auto__","fexpr__47911","coll__12531__auto__","cljs.core/hash-unordered-coll","this47878","other47879","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/PROTOCOL_SENTINEL","this__12543__auto__","k__12544__auto__","cljs.core/contains?","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","cljs.core/-with-meta","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.core/not-empty","this__12541__auto__","k__12542__auto__","pred__47924","cljs.core/keyword-identical?","expr__47925","G__47927","G__47928","G__47929","G__47930","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","this__12546__auto__","this__12533__auto__","this__12539__auto__","entry__12540__auto__","cljs.core/vector?","cljs.core/-assoc","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","cljs.core/-conj","com.wsscode.oge.pub.network/DynamicNetwork","this__4208__auto__","cljs.core/List","writer__4209__auto__","cljs.core/-write","G__47880","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","com.wsscode.oge.pub.network/->DynamicNetwork","com.wsscode.oge.pub.network/map->DynamicNetwork","_","fulcro.client.network/serialize-requests?","this","edn","ok","error","cljs.core/deref","fulcro.client.network/send","G__47917","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2","G__47950","com.wsscode.oge.pub.network/make-network","js/Error","com.wsscode.oge.pub.network.make_network.cljs$core$IFn$_invoke$arity$2","base-network","fulcro.client.network.make_fulcro_network.cljs$core$IFn$_invoke$arity$variadic"],"sourcesContent":["(ns com.wsscode.oge.pub.network\n  (:require [fulcro.client.network :as f.network]))\n\n(defn request-transform [req]\n  (let [token nil]\n    (-> req\n        (cond-> token (assoc-in [:headers \"Authorization\"] (str \"Bearer \" token))))))\n\n(defn network-error-callback [& args]\n  (js/console.log \"Network error\" args))\n\n(defrecord DynamicNetwork [url-atom network]\n  f.network/NetworkBehavior\n  (serialize-requests? [_] (f.network/serialize-requests? network))\n\n  f.network/FulcroNetwork\n  (send [this edn ok error]\n    (if @url-atom\n      (-> network\n          (assoc :url @url-atom)\n          (f.network/send edn ok error))\n      (error (ex-info \"No URL set\" {}))))\n\n  (start [_]))\n\n(defn make-network\n  ([url-atom] (make-network url-atom {}))\n  ([url-atom _]\n   (let [base-network (f.network/make-fulcro-network nil\n                        :request-transform request-transform\n                        :global-error-callback network-error-callback)]\n     (map->DynamicNetwork {:url-atom url-atom\n                           :network  base-network}))))\n"]}