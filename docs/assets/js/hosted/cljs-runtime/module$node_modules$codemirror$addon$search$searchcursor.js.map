{
"version":3,
"file":"module$node_modules$codemirror$addon$search$searchcursor.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/codemirror/addon/search/searchcursor.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$addon$search$searchcursor\"] = function(global,process,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n  var Pos = CodeMirror.Pos\n\n  function regexpFlags(regexp) {\n    var flags = regexp.flags\n    return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\")\n      + (regexp.global ? \"g\" : \"\")\n      + (regexp.multiline ? \"m\" : \"\")\n  }\n\n  function ensureFlags(regexp, flags) {\n    var current = regexpFlags(regexp), target = current\n    for (var i = 0; i < flags.length; i++) if (target.indexOf(flags.charAt(i)) == -1)\n      target += flags.charAt(i)\n    return current == target ? regexp : new RegExp(regexp.source, target)\n  }\n\n  function maybeMultiline(regexp) {\n    return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source)\n  }\n\n  function searchRegexpForward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n      regexp.lastIndex = ch\n      var string = doc.getLine(line), match = regexp.exec(string)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpForwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpForward(doc, regexp, start)\n\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunk = 1\n    for (var line = start.line, last = doc.lastLine(); line <= last;) {\n      // This grows the search buffer in exponentially-sized chunks\n      // between matches, so that nearby matches are fast and don't\n      // require concatenating the whole document (in case we're\n      // searching for something that has tons of matches), but at the\n      // same time, the amount of retries is limited.\n      for (var i = 0; i < chunk; i++) {\n        if (line > last) break\n        var curLine = doc.getLine(line++)\n        string = string == null ? curLine : string + \"\\n\" + curLine\n      }\n      chunk = chunk * 2\n      regexp.lastIndex = start.ch\n      var match = regexp.exec(string)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  function lastMatchIn(string, regexp) {\n    var cutOff = 0, match\n    for (;;) {\n      regexp.lastIndex = cutOff\n      var newMatch = regexp.exec(string)\n      if (!newMatch) return match\n      match = newMatch\n      cutOff = match.index + (match[0].length || 1)\n      if (cutOff == string.length) return match\n    }\n  }\n\n  function searchRegexpBackward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n      var string = doc.getLine(line)\n      if (ch > -1) string = string.slice(0, ch)\n      var match = lastMatchIn(string, regexp)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpBackwardMultiline(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunk = 1\n    for (var line = start.line, first = doc.firstLine(); line >= first;) {\n      for (var i = 0; i < chunk; i++) {\n        var curLine = doc.getLine(line--)\n        string = string == null ? curLine.slice(0, start.ch) : curLine + \"\\n\" + string\n      }\n      chunk *= 2\n\n      var match = lastMatchIn(string, regexp)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = line + before.length, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  var doFold, noFold\n  if (String.prototype.normalize) {\n    doFold = function(str) { return str.normalize(\"NFD\").toLowerCase() }\n    noFold = function(str) { return str.normalize(\"NFD\") }\n  } else {\n    doFold = function(str) { return str.toLowerCase() }\n    noFold = function(str) { return str }\n  }\n\n  // Maps a position in a case-folded line back to a position in the original line\n  // (compensating for codepoints increasing in number during folding)\n  function adjustPos(orig, folded, pos, foldFunc) {\n    if (orig.length == folded.length) return pos\n    for (var min = 0, max = pos + Math.max(0, orig.length - folded.length);;) {\n      if (min == max) return min\n      var mid = (min + max) >> 1\n      var len = foldFunc(orig.slice(0, mid)).length\n      if (len == pos) return mid\n      else if (len > pos) max = mid\n      else min = mid + 1\n    }\n  }\n\n  function searchStringForward(doc, query, start, caseFold) {\n    // Empty string would match anything and never progress, so we\n    // define it to match nothing instead.\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n      var orig = doc.getLine(line).slice(ch), string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.indexOf(lines[0])\n        if (found == -1) continue search\n        var start = adjustPos(orig, string, found, fold) + ch\n        return {from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)}\n      } else {\n        var cutFrom = string.length - lines[0].length\n        if (string.slice(cutFrom) != lines[0]) continue search\n        for (var i = 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(line + i)) != lines[i]) continue search\n        var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1]\n        if (endString.slice(0, lastLine.length) != lastLine) continue search\n        return {from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n                to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function searchStringBackward(doc, query, start, caseFold) {\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n      var orig = doc.getLine(line)\n      if (ch > -1) orig = orig.slice(0, ch)\n      var string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.lastIndexOf(lines[0])\n        if (found == -1) continue search\n        return {from: Pos(line, adjustPos(orig, string, found, fold)),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))}\n      } else {\n        var lastLine = lines[lines.length - 1]\n        if (string.slice(0, lastLine.length) != lastLine) continue search\n        for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(start + i)) != lines[i]) continue search\n        var top = doc.getLine(line + 1 - lines.length), topString = fold(top)\n        if (topString.slice(topString.length - lines[0].length) != lines[0]) continue search\n        return {from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n                to: Pos(line, adjustPos(orig, string, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function SearchCursor(doc, query, pos, options) {\n    this.atOccurrence = false\n    this.doc = doc\n    pos = pos ? doc.clipPos(pos) : Pos(0, 0)\n    this.pos = {from: pos, to: pos}\n\n    var caseFold\n    if (typeof options == \"object\") {\n      caseFold = options.caseFold\n    } else { // Backwards compat for when caseFold was the 4th argument\n      caseFold = options\n      options = null\n    }\n\n    if (typeof query == \"string\") {\n      if (caseFold == null) caseFold = false\n      this.matches = function(reverse, pos) {\n        return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos, caseFold)\n      }\n    } else {\n      query = ensureFlags(query, \"gm\")\n      if (!options || options.multiline !== false)\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos)\n        }\n      else\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos)\n        }\n    }\n  }\n\n  SearchCursor.prototype = {\n    findNext: function() {return this.find(false)},\n    findPrevious: function() {return this.find(true)},\n\n    find: function(reverse) {\n      var result = this.matches(reverse, this.doc.clipPos(reverse ? this.pos.from : this.pos.to))\n\n      // Implements weird auto-growing behavior on null-matches for\n      // backwards-compatiblity with the vim code (unfortunately)\n      while (result && CodeMirror.cmpPos(result.from, result.to) == 0) {\n        if (reverse) {\n          if (result.from.ch) result.from = Pos(result.from.line, result.from.ch - 1)\n          else if (result.from.line == this.doc.firstLine()) result = null\n          else result = this.matches(reverse, this.doc.clipPos(Pos(result.from.line - 1)))\n        } else {\n          if (result.to.ch < this.doc.getLine(result.to.line).length) result.to = Pos(result.to.line, result.to.ch + 1)\n          else if (result.to.line == this.doc.lastLine()) result = null\n          else result = this.matches(reverse, Pos(result.to.line + 1, 0))\n        }\n      }\n\n      if (result) {\n        this.pos = result\n        this.atOccurrence = true\n        return this.pos.match || true\n      } else {\n        var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0)\n        this.pos = {from: end, to: end}\n        return this.atOccurrence = false\n      }\n    },\n\n    from: function() {if (this.atOccurrence) return this.pos.from},\n    to: function() {if (this.atOccurrence) return this.pos.to},\n\n    replace: function(newText, origin) {\n      if (!this.atOccurrence) return\n      var lines = CodeMirror.splitLines(newText)\n      this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin)\n      this.pos.to = Pos(this.pos.from.line + lines.length - 1,\n                        lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0))\n    }\n  }\n\n  CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this.doc, query, pos, caseFold)\n  })\n  CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this, query, pos, caseFold)\n  })\n\n  CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n    var ranges = []\n    var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold)\n    while (cur.findNext()) {\n      if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break\n      ranges.push({anchor: cur.from(), head: cur.to()})\n    }\n    if (ranges.length)\n      this.setSelections(ranges, 0)\n  })\n});\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","mod","define","amd","CodeMirror","ensureFlags","regexp","flags","target","ignoreCase","multiline","i","length","indexOf","charAt","current","RegExp","source","searchRegexpForward","doc","start","line","ch","last","lastLine","lastIndex","match","string","getLine","exec","from","Pos","index","to","searchRegexpForwardMultiline","test","chunk","curLine","before","slice","split","inside","startLine","startCh","lastMatchIn","cutOff","newMatch","searchRegexpBackward","first","firstLine","searchRegexpBackwardMultiline","adjustPos","orig","folded","pos","foldFunc","min","max","Math","mid","len","searchStringForward","query","caseFold","fold","doFold","noFold","lines","found","cutFrom","end","endString","searchStringBackward","lastIndexOf","top","topString","SearchCursor","options","atOccurrence","clipPos","matches","this.matches","reverse","String","prototype","normalize","str","toLowerCase","findNext","find","findPrevious","result","cmpPos","replace","newText","origin","splitLines","replaceRange","defineExtension","defineDocExtension","ranges","cur","getSearchCursor","getCursor","push","anchor","head","setSelections"]
}
