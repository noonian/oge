{
"version":3,
"file":"module$com$wsscode$oge$vendor$parinfer_codemirror.js",
"lineCount":13,
"mappings":"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",
"sources":["com/wsscode/oge/vendor/parinfer-codemirror.js"],
"sourcesContent":["shadow$provide[\"module$com$wsscode$oge$vendor$parinfer_codemirror\"] = function(global,process,require,module,exports) {\n//\n// Parinfer for CodeMirror 1.3.1\n//\n// Copyright 2017 \u00a9 Shaun Lebron\n// MIT License\n//\n\n//------------------------------------------------------------------------------\n// JS Module Boilerplate\n//------------------------------------------------------------------------------\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  }\n  else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  }\n  else {\n    root.parinferCodeMirror = factory();\n  }\n}(this, function() { // start module anonymous scope\n  \"use strict\";\n\n//------------------------------------------------------------------------------\n// Constants\n//------------------------------------------------------------------------------\n\n// We attach our Parinfer state to this property on the CodeMirror instance.\n  var STATE_PROP = '__parinfer__';\n\n  var PAREN_MODE = 'paren';\n  var INDENT_MODE = 'indent';\n  var SMART_MODE = 'smart';\n\n  var MODES = [PAREN_MODE, INDENT_MODE, SMART_MODE];\n\n  var CLASSNAME_ERROR = 'parinfer-error';\n  var CLASSNAME_PARENTRAIL = 'parinfer-paren-trail';\n  var CLASSNAME_LOCUS_PAREN = 'parinfer-locus-paren';\n\n  var CLASSNAME_LOCUS_LAYER = 'parinfer-locus';\n\n//------------------------------------------------------------------------------\n// State\n// (`state` represents the parinfer state attached to a single CodeMirror editor)\n//------------------------------------------------------------------------------\n\n  function initialState(cm, mode, options) {\n    return {\n      cm: cm,\n      mode: mode,\n      options: options,\n      enabled: false,\n      cursorTimeout: null,\n      monitorCursor: true,\n      prevCursorX: null,\n      prevCursorLine: null,\n      callbackCursor: null,\n      callbackChanges: null,\n    };\n  }\n\n//------------------------------------------------------------------------------\n// Errors\n//------------------------------------------------------------------------------\n\n  function error(msg) {\n    return 'parinferCodeMirror: ' + msg;\n  }\n\n  function ensureMode(mode) {\n    if (MODES.indexOf(mode) === -1) {\n      throw error(\n        'Mode \"' + mode + '\" is invalid. ' +\n        'Must be one of: ' + MODES.join(',')\n      );\n    }\n  }\n\n  function ensureState(cm) {\n    var state = cm[STATE_PROP];\n    if (!state) {\n      throw error(\n        'You must call parinferCodeMirror.init(cm) on a CodeMirror instance ' +\n        'before you can use the rest of the API.'\n      );\n    }\n    return state;\n  }\n\n//------------------------------------------------------------------------------\n// Data conversion\n//------------------------------------------------------------------------------\n\n  function convertChanges(changes) {\n    return changes.map(function(change) {\n      return {\n        x: change.from.ch,\n        lineNo: change.from.line,\n        oldText: change.removed.join('\\n'),\n        newText: change.text.join('\\n')\n      };\n    });\n  }\n\n//------------------------------------------------------------------------------\n// Markers\n//------------------------------------------------------------------------------\n\n  function clearMarks(cm, className) {\n    var i;\n    var marks = cm.getAllMarks();\n    for (i=0; i<marks.length; i++) {\n      if (marks[i].className === className) {\n        marks[i].clear();\n      }\n    }\n  }\n\n  function clearAllMarks(cm) {\n    clearMarks(cm, CLASSNAME_ERROR);\n    clearMarks(cm, CLASSNAME_PARENTRAIL);\n  }\n\n  function addMark(cm, lineNo, x0, x1, className) {\n    var from = {line: lineNo, ch: x0};\n    var to = {line: lineNo, ch: x1};\n    cm.markText(from, to, {className: className});\n  }\n\n  function updateErrorMarks(cm, error) {\n    clearMarks(cm, CLASSNAME_ERROR);\n    if (error) {\n      addMark(cm, error.lineNo, error.x, error.x+1, CLASSNAME_ERROR);\n      if (error.extra) {\n        addMark(cm, error.extra.lineNo, error.extra.x, error.extra.x+1, CLASSNAME_ERROR);\n      }\n    }\n  }\n\n  function updateParenTrailMarks(cm, parenTrails) {\n    clearMarks(cm, CLASSNAME_PARENTRAIL);\n    if (parenTrails) {\n      var i, trail;\n      for (i=0; i<parenTrails.length; i++) {\n        trail = parenTrails[i];\n        addMark(cm, trail.lineNo, trail.startX, trail.endX, CLASSNAME_PARENTRAIL);\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n// Tab Stops\n//------------------------------------------------------------------------------\n\n  function getSelectionStartLine(cm) {\n    var selection = cm.listSelections()[0];\n    // head and anchor are reversed sometimes\n    return Math.min(selection.head.line, selection.anchor.line);\n  }\n\n  function expandTabStops(tabStops) {\n    if (!tabStops) {\n      return null;\n    }\n    var xs = [];\n    var i, stop, prevX=-1;\n    for (i=0; i<tabStops.length; i++) {\n      stop = tabStops[i];\n      if (prevX >= stop.x) {\n        xs.pop();\n      }\n      xs.push(stop.x);\n      xs.push(stop.x + (stop.ch === '(' ? 2 : 1));\n      if (stop.argX != null) {\n        xs.push(stop.argX);\n      }\n    }\n    return xs;\n  }\n\n  function nextStop(stops, x, dx) {\n    if (!stops) {\n      return null;\n    }\n    var i, stop, right, left;\n    for (i=0; i<stops.length; i++) {\n      stop = stops[i];\n      if (x < stop) { right = stop; break; }\n      if (x > stop) { left = stop; }\n    }\n    if (dx === -1) { return left; }\n    if (dx === 1) { return right; }\n  }\n\n  function getIndent(cm, lineNo) {\n    var line = cm.getLine(lineNo);\n    var i;\n    for (i=0; i<line.length; i++) {\n      if (line[i] !== ' ') {\n        return i;\n      }\n    }\n    return null;\n  }\n\n  function indentSelection(cm, dx, stops) {\n    // Indent whole Selection\n    var lineNo = getSelectionStartLine(cm);\n    var x = getIndent(cm, lineNo);\n    var nextX = nextStop(stops, x, dx);\n    if (nextX == null) {\n      nextX = Math.max(0, x + dx*2);\n    }\n    cm.indentSelection(nextX-x);\n  }\n\n  function indentLine(cm, lineNo, delta) {\n    var text = cm.getDoc().getLine(lineNo);\n\n    // cm.indentLine does not indent empty lines\n    if (text.trim() !== '') {\n      cm.indentLine(lineNo, delta);\n      return;\n    }\n\n    if (delta > 0) {\n      var spaces = Array(delta + 1).join(\" \");\n      cm.replaceSelection(spaces);\n    }\n    else {\n      var x = cm.getCursor().ch;\n      cm.replaceRange(\"\", {line: lineNo, ch: x+delta}, {line: lineNo, ch: x}, \"+indent\");\n    }\n  }\n\n  function indentAtCursor(cm, dx, stops) {\n    // Indent single line at cursor\n    var cursor = cm.getCursor();\n    var lineNo = cursor.line;\n    var x = cursor.ch;\n    var indent = getIndent(cm, cursor.line);\n\n    var stop = nextStop(stops, x, dx);\n    var useStops = (indent == null || x === indent);\n    var nextX = (stop != null && useStops) ? stop : Math.max(0, x+dx*2);\n\n    if (indent != null && indent < x && x < nextX) {\n      var spaces = Array(nextX-x + 1).join(\" \");\n      cm.replaceSelection(spaces);\n    }\n    else {\n      indentLine(cm, lineNo, nextX-x);\n    }\n  }\n\n  function onTab(cm, dx) {\n    var hasSelection = cm.somethingSelected();\n    var state = ensureState(cm);\n    var stops = expandTabStops(state.tabStops);\n\n    if (hasSelection) {\n      indentSelection(cm, dx, stops);\n    }\n    else {\n      indentAtCursor(cm, dx, stops);\n    }\n  }\n\n//------------------------------------------------------------------------------\n// Locus/Guides layer\n//------------------------------------------------------------------------------\n\n  function getLayerContainer(cm) {\n    var wrapper = cm.getWrapperElement();\n    var lines = wrapper.querySelector('.CodeMirror-lines');\n    var container = lines.parentNode;\n    return container;\n  }\n\n  function parenSelected(paren, sel) {\n    return sel.contains({line: paren.lineNo, ch: paren.x}) !== -1;\n  }\n\n  function pointRevealsParenTrail(trail, pos) {\n    return (\n      pos.line === trail.lineNo &&\n      trail.startX <= pos.ch /* && cursor.ch <= trail.endX */\n    );\n  }\n\n  function hideParen(cm, paren) {\n    var sel = cm.getDoc().sel;\n    var sel0 = sel.ranges[0];\n    var shouldShowCloser = (\n      paren.lineNo === paren.closer.lineNo ||\n      !paren.closer.trail ||\n      pointRevealsParenTrail(paren.closer.trail, sel0.anchor) ||\n      pointRevealsParenTrail(paren.closer.trail, sel0.head) ||\n      parenSelected(paren.closer, sel)\n    );\n\n    if (!shouldShowCloser) {\n      addMark(cm, paren.closer.lineNo, paren.closer.x, paren.closer.x+1, CLASSNAME_LOCUS_PAREN);\n    }\n    hideParens(cm, paren.children);\n  }\n\n  function hideParens(cm, parens) {\n    var i;\n    for (i=0; i<parens.length; i++) {\n      hideParen(cm, parens[i]);\n    }\n  }\n\n  function charPos(cm, paren) {\n    var p = cm.charCoords({line: paren.lineNo, ch: paren.x}, \"local\");\n    var w = p.right - p.left;\n    return {\n      midx: p.left + w/2,\n      right: p.right,\n      left: p.left,\n      top: p.top,\n      bottom: p.bottom,\n    };\n  }\n\n  function getRightBound(cm, startLine, endLine) {\n    var doc = cm.getDoc();\n    var maxWidth=0;\n    var maxLineNo=0;\n    var i;\n    for (i=startLine; i<=endLine; i++) {\n      var line = doc.getLine(i);\n      if (line.length > maxWidth) {\n        maxWidth = line.length;\n        maxLineNo = i;\n      }\n    }\n    var wall = charPos(cm, {lineNo: maxLineNo, x: maxWidth});\n    return wall.right;\n  }\n\n  function addBox(cm, paren) {\n    var layer = cm[STATE_PROP].layer;\n    var paper = layer.paper;\n    var charW = layer.charW;\n    var charH = layer.charH;\n\n    var open = charPos(cm, paren);\n    var close = charPos(cm, paren.closer);\n\n    var r = 4;\n\n    if (paren.closer.trail && paren.lineNo !== paren.closer.lineNo) {\n      switch (layer.type) {\n        case 'guides':\n          paper.path([\n            'M', open.midx, open.bottom,\n            'V', close.bottom\n          ].join(' '));\n          break;\n        case 'locus':\n          var right = getRightBound(cm, paren.lineNo, paren.closer.lineNo);\n          paper.path([\n            'M', open.midx, open.top+r,\n            'A', r, r, 0, 0, 1, open.midx+r, open.top,\n            'H', right-r,\n            'A', r, r, 0, 0, 1, right, open.top+r,\n            'V', close.bottom,\n            'H', open.midx,\n            'V', open.bottom\n          ].join(' '));\n          break;\n      }\n    }\n\n    addBoxes(cm, paren.children);\n  }\n\n  function addBoxes(cm, parens) {\n    var i;\n    for (i=0; i<parens.length; i++) {\n      addBox(cm, parens[i]);\n    }\n  }\n\n  function addLayer(cm, type) {\n    var layer = cm[STATE_PROP].layer;\n    layer.type = type;\n\n    var el = document.createElement('div');\n    el.style.position = 'absolute';\n    el.style.left = '0';\n    el.style.top = '0';\n    el.style['z-index'] = 100;\n    el.className = CLASSNAME_LOCUS_LAYER;\n\n    layer.el = el;\n    layer.container.appendChild(el);\n\n    var pixelW = layer.container.clientWidth;\n    var pixelH = layer.container.clientHeight;\n\n    layer.paper = Raphael(el, pixelW, pixelH);\n  }\n\n  function clearLayer(cm) {\n    var layer = cm[STATE_PROP].layer;\n    if (layer && layer.el) {\n      layer.container.removeChild(layer.el);\n    }\n  }\n\n  function updateLocusLayer(cm, parens) {\n    clearMarks(cm, CLASSNAME_LOCUS_PAREN);\n    if (parens) {\n      hideParens(cm, parens);\n      clearLayer(cm);\n      addLayer(cm, 'locus');\n      addBoxes(cm, parens);\n    }\n  }\n\n  function updateGuidesLayer(cm, parens) {\n    if (parens) {\n      clearLayer(cm);\n      addLayer(cm, 'guides');\n      addBoxes(cm, parens);\n    }\n  }\n\n//------------------------------------------------------------------------------\n// Text Correction\n//------------------------------------------------------------------------------\n\n// If `changes` is missing, then only the cursor position has changed.\n  function fixText(state, changes) {\n    // Get editor data\n    var cm = state.cm;\n    var text = cm.getValue();\n    var hasSelection = cm.somethingSelected();\n    var selections = cm.listSelections();\n    var cursor = cm.getCursor();\n    var scroller = cm.getScrollerElement();\n\n    // Create options\n    var options = {\n      cursorLine: cursor.line,\n      cursorX: cursor.ch,\n      prevCursorLine: state.prevCursorLine,\n      prevCursorX: state.prevCursorX\n    };\n    if (hasSelection) {\n      options.selectionStartLine = getSelectionStartLine(cm);\n    }\n    if (state.options) {\n      var p;\n      for (p in state.options) {\n        if (state.options.hasOwnProperty(p)) {\n          options[p] = state.options[p];\n        }\n      }\n    }\n    if (changes) {\n      options.changes = convertChanges(changes);\n    }\n\n    var locus = state.options && state.options.locus;\n    var guides = state.options && state.options.guides;\n\n    if (locus || guides) {\n      delete options.locus;\n      delete options.guides;\n      options.returnParens = true;\n    }\n\n    // Run Parinfer\n    var result;\n    var mode = state.fixMode ? PAREN_MODE : state.mode;\n    switch (mode) {\n      case INDENT_MODE: result = parinfer.indentMode(text, options); break;\n      case PAREN_MODE:  result = parinfer.parenMode(text, options); break;\n      case SMART_MODE:  result = parinfer.smartMode(text, options); break;\n      default: ensureMode(mode);\n    }\n\n    // Remember the paren tree.\n    state.parens = result.parens;\n\n    // Remember tab stops for smart tabbing.\n    state.tabStops = result.tabStops;\n\n    if (text !== result.text) {\n      // Backup history\n      var hist = cm.getHistory();\n\n      // Update text\n      cm.setValue(result.text);\n\n      // Update cursor and selection\n      state.monitorCursor = false;\n      if (hasSelection) {\n        cm.setSelections(selections);\n      } else {\n        cm.setCursor(result.cursorLine, result.cursorX);\n      }\n\n      // Restore history to avoid pushing our edits to the history stack.\n      cm.setHistory(hist);\n\n      setTimeout(function(){ state.monitorCursor = true; }, 0);\n\n      // Update scroll position\n      cm.scrollTo(scroller.scrollLeft, scroller.scrollTop);\n    }\n\n    // Clear or add new marks\n    updateErrorMarks(cm, result.error);\n    updateParenTrailMarks(cm, result.parenTrails);\n\n    // Remember the cursor position for next time\n    state.prevCursorLine = result.cursorLine;\n    state.prevCursorX = result.cursorX;\n\n    if (locus) {\n      updateLocusLayer(cm, result.parens);\n    } else if (guides) {\n      updateGuidesLayer(cm, result.parens);\n    }\n\n    // Re-run with original mode if code was finally fixed in Paren Mode.\n    if (state.fixMode && result.success) {\n      state.fixMode = false;\n      return fixText(state, changes);\n    }\n\n    return result.success;\n  }\n\n//------------------------------------------------------------------------------\n// CodeMirror Integration\n//------------------------------------------------------------------------------\n\n  function onCursorChange(state) {\n    clearTimeout(state.cursorTimeout);\n    if (state.monitorCursor) {\n      state.cursorTimeout = setTimeout(function () { fixText(state); }, 0);\n    }\n  }\n\n  function onTextChanges(state, changes) {\n    clearTimeout(state.cursorTimeout);\n    var origin = changes[0].origin;\n    if (origin !== 'setValue') {\n      fixText(state, changes);\n    }\n  }\n\n  function on(state) {\n    if (state.enabled) {\n      return;\n    }\n    state.callbackCursor = function(cm) {\n      onCursorChange(state);\n    };\n    state.callbackChanges = function(cm, changes) {\n      onTextChanges(state, changes);\n    };\n    var cm = state.cm;\n    cm.on('cursorActivity', state.callbackCursor);\n    cm.on('changes', state.callbackChanges);\n    state.parinferKeys = {\n      'Tab': function(cm) { onTab(cm, 1); },\n      'Shift-Tab': function(cm) { onTab(cm, -1); }\n    };\n    cm.addKeyMap(state.parinferKeys);\n    state.enabled = true;\n  }\n\n  function off(state) {\n    if (!state.enabled) {\n      return;\n    }\n    var cm = state.cm;\n    clearAllMarks(cm);\n    cm.off('cursorActivity', state.callbackCursor);\n    cm.off('changes', state.callbackChanges);\n    cm.removeKeyMap(state.parinferKeys);\n    state.enabled = false;\n  }\n\n//------------------------------------------------------------------------------\n// Public API\n//------------------------------------------------------------------------------\n\n  function init(cm, mode, options) {\n    var state = cm[STATE_PROP];\n    if (state) {\n      throw error('init has already been called on this CodeMirror instance');\n    }\n\n    mode = mode || SMART_MODE;\n    ensureMode(mode);\n\n    state = initialState(cm, mode, options);\n    cm[STATE_PROP] = state;\n\n    state.layer = {\n      container: getLayerContainer(cm)\n    };\n    return enable(cm);\n  }\n\n  function enable(cm) {\n    var state = ensureState(cm);\n\n    // preprocess text to keep Parinfer from changing code structure\n    if (state.mode !== PAREN_MODE) {\n      state.fixMode = true;\n    }\n\n    on(state);\n    return fixText(state);\n  }\n\n  function disable(cm) {\n    var state = ensureState(cm);\n    off(state);\n  }\n\n  function setMode(cm, mode) {\n    var state = ensureState(cm);\n    ensureMode(mode);\n    state.mode = mode;\n    return fixText(state);\n  }\n\n  function setOptions(cm, options) {\n    var state = ensureState(cm);\n    state.options = options;\n    return fixText(state);\n  }\n\n  var API = {\n    version: \"1.3.1\",\n    init: init,\n    enable: enable,\n    disable: disable,\n    setMode: setMode,\n    setOptions: setOptions\n  };\n\n  return API;\n\n})); // end module anonymous scope\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","root","factory","define","amd","parinferCodeMirror","error","msg","ensureMode","mode","MODES","indexOf","join","ensureState","cm","state","convertChanges","changes","map","change","x","from","ch","lineNo","line","oldText","removed","newText","text","clearMarks","className","marks","getAllMarks","i","length","clear","addMark","x0","x1","markText","to","updateErrorMarks","CLASSNAME_ERROR","extra","updateParenTrailMarks","parenTrails","CLASSNAME_PARENTRAIL","trail","startX","endX","getSelectionStartLine","selection","listSelections","Math","min","head","anchor","nextStop","stops","dx","left","stop","right","getIndent","getLine","onTab","hasSelection","somethingSelected","tabStops","xs","prevX","pop","push","argX","nextX","max","indentSelection","cursor","getCursor","indent","spaces","Array","replaceSelection","getDoc","trim","indentLine","delta","replaceRange","pointRevealsParenTrail","pos","hideParens","parens","sel","sel0","ranges","shouldShowCloser","contains","paren","closer","CLASSNAME_LOCUS_PAREN","children","charPos","p","charCoords","midx","top","bottom","addBoxes","layer","paper","open","close","type","path","doc","maxWidth","maxLineNo","endLine","wall","r","addLayer","el","document","createElement","style","position","CLASSNAME_LOCUS_LAYER","container","appendChild","Raphael","clientWidth","clientHeight","clearLayer","removeChild","updateLocusLayer","updateGuidesLayer","fixText","getValue","selections","scroller","getScrollerElement","options","cursorLine","cursorX","prevCursorLine","prevCursorX","selectionStartLine","hasOwnProperty","locus","guides","returnParens","fixMode","PAREN_MODE","INDENT_MODE","result","parinfer","indentMode","parenMode","SMART_MODE","smartMode","hist","getHistory","setValue","monitorCursor","setSelections","setCursor","setHistory","setTimeout","scrollTo","scrollLeft","scrollTop","success","onCursorChange","clearTimeout","cursorTimeout","on","enabled","callbackCursor","state.callbackCursor","callbackChanges","state.callbackChanges","origin","parinferKeys","Tab","Shift-Tab","addKeyMap","enable","API","version","init","getWrapperElement","wrapper","querySelector","lines","parentNode","disable","off","removeKeyMap","setMode","setOptions"]
}
