{
"version":3,
"file":"module$node_modules$codemirror$addon$display$placeholder.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,yDAAA,CAA6E,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAwC,CAI5H,SAAQ,CAACC,CAAD,CAAM,CACS,QAAtB,EAAI,MAAOD,EAAX,EAAmD,QAAnD,EAAkC,MAAOD,EAAzC,CACEE,CAAA,CAAIH,CAAA,CAAQ,+CAAR,CAAJ,CADF,CAE0B,UAArB,EAAI,MAAOI,OAAX,EAAmCA,MAAAC,IAAnC,CACHD,MAAA,CAAO,CAAC,sBAAD,CAAP,CAAiCD,CAAjC,CADG,CAGHA,CAAA,CAAIG,UAAJ,CANW,CAAd,CAAD,CAOG,QAAQ,CAACA,CAAD,CAAa,CAoBtBC,QAASA,EAAgB,CAACC,CAAD,CAAK,CACxBA,CAAAC,MAAAC,YAAJ,GACEF,CAAAC,MAAAC,YAAAC,WAAAC,YAAA,CAA4CJ,CAAAC,MAAAC,YAA5C,CACA,CAAAF,CAAAC,MAAAC,YAAA,CAAuB,IAFzB,CAD4B,CAM9BG,QAASA,EAAc,CAACL,CAAD,CAAK,CAC1BD,CAAA,CAAiBC,CAAjB,CACA,KAAIM,EAAMN,CAAAC,MAAAC,YAANI,CAA6BC,QAAAC,cAAA,CAAuB,KAAvB,CACjCF,EAAAG,MAAAC,QAAA;AAAoB,8BACpBJ,EAAAG,MAAAE,UAAA,CAAsBX,CAAAY,UAAA,CAAa,WAAb,CACtBN,EAAAO,UAAA,CAAgB,wBAChB,KAAIC,EAAcd,CAAAY,UAAA,CAAa,aAAb,CACQ,SAA1B,EAAI,MAAOE,EAAX,GAAoCA,CAApC,CAAkDP,QAAAQ,eAAA,CAAwBD,CAAxB,CAAlD,CACAR,EAAAU,YAAA,CAAgBF,CAAhB,CACAd,EAAAiB,QAAAC,UAAAC,aAAA,CAAkCb,CAAlC,CAAuCN,CAAAiB,QAAAC,UAAAE,WAAvC,CAT0B,CAY5BC,QAASA,EAAM,CAACrB,CAAD,CAAK,CACdsB,CAAA,CAAQtB,CAAR,CAAJ,EAAiBK,CAAA,CAAeL,CAAf,CADC,CAGpBuB,QAASA,EAAQ,CAACvB,CAAD,CAAK,CAAA,IAChBwB,EAAUxB,CAAAyB,kBAAA,EADM,CACkBC,EAAQJ,CAAA,CAAQtB,CAAR,CAC9CwB,EAAAX,UAAA,CAAoBW,CAAAX,UAAAc,QAAA,CAA0B,mBAA1B,CAA+C,EAA/C,CAApB,EAA0ED,CAAA,CAAQ,mBAAR,CAA8B,EAAxG,CAEIA,EAAJ,CAAWrB,CAAA,CAAeL,CAAf,CAAX,CACKD,CAAA,CAAiBC,CAAjB,CALe,CAQtBsB,QAASA,EAAO,CAACtB,CAAD,CAAK,CACnB,MAA2B,EAA3B,GAAQA,CAAA4B,UAAA,EAAR,EAAoD,EAApD,GAAkC5B,CAAA6B,QAAA,CAAW,CAAX,CADf;AAhDrB/B,CAAAgC,aAAA,CAAwB,aAAxB,CAAuC,EAAvC,CAA2C,QAAQ,CAAC9B,CAAD,CAAK+B,CAAL,CAAUC,CAAV,CAAe,CAC5DC,CAAAA,CAAOD,CAAPC,EAAcD,CAAdC,EAAqBnC,CAAAoC,KACrBH,EAAJ,EAAW,CAACE,CAAZ,EACEjC,CAAAmC,GAAA,CAAM,MAAN,CAAcd,CAAd,CAGA,CAFArB,CAAAmC,GAAA,CAAM,QAAN,CAAgBZ,CAAhB,CAEA,CADAvB,CAAAmC,GAAA,CAAM,SAAN,CAAiBZ,CAAjB,CACA,CAAAA,CAAA,CAASvB,CAAT,CAJF,EAKW,CAAC+B,CALZ,EAKmBE,CALnB,GAMEjC,CAAAoC,IAAA,CAAO,MAAP,CAAef,CAAf,CAKA,CAJArB,CAAAoC,IAAA,CAAO,QAAP,CAAiBb,CAAjB,CAIA,CAHAvB,CAAAoC,IAAA,CAAO,SAAP,CAAkBb,CAAlB,CAGA,CAFAxB,CAAA,CAAiBC,CAAjB,CAEA,CADIwB,CACJ,CADcxB,CAAAyB,kBAAA,EACd,CAAAD,CAAAX,UAAA,CAAoBW,CAAAX,UAAAc,QAAA,CAA0B,mBAA1B,CAA+C,EAA/C,CAXtB,CAcII,EAAJ,EAAW,CAAC/B,CAAAqC,SAAA,EAAZ,EAA2BhB,CAAA,CAAOrB,CAAP,CAhBqC,CAAlE,CADsB,CAPxB,CAJ6H;",
"sources":["node_modules/codemirror/addon/display/placeholder.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$addon$display$placeholder\"] = function(global,process,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  CodeMirror.defineOption(\"placeholder\", \"\", function(cm, val, old) {\n    var prev = old && old != CodeMirror.Init;\n    if (val && !prev) {\n      cm.on(\"blur\", onBlur);\n      cm.on(\"change\", onChange);\n      cm.on(\"swapDoc\", onChange);\n      onChange(cm);\n    } else if (!val && prev) {\n      cm.off(\"blur\", onBlur);\n      cm.off(\"change\", onChange);\n      cm.off(\"swapDoc\", onChange);\n      clearPlaceholder(cm);\n      var wrapper = cm.getWrapperElement();\n      wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\");\n    }\n\n    if (val && !cm.hasFocus()) onBlur(cm);\n  });\n\n  function clearPlaceholder(cm) {\n    if (cm.state.placeholder) {\n      cm.state.placeholder.parentNode.removeChild(cm.state.placeholder);\n      cm.state.placeholder = null;\n    }\n  }\n  function setPlaceholder(cm) {\n    clearPlaceholder(cm);\n    var elt = cm.state.placeholder = document.createElement(\"pre\");\n    elt.style.cssText = \"height: 0; overflow: visible\";\n    elt.style.direction = cm.getOption(\"direction\");\n    elt.className = \"CodeMirror-placeholder\";\n    var placeHolder = cm.getOption(\"placeholder\")\n    if (typeof placeHolder == \"string\") placeHolder = document.createTextNode(placeHolder)\n    elt.appendChild(placeHolder)\n    cm.display.lineSpace.insertBefore(elt, cm.display.lineSpace.firstChild);\n  }\n\n  function onBlur(cm) {\n    if (isEmpty(cm)) setPlaceholder(cm);\n  }\n  function onChange(cm) {\n    var wrapper = cm.getWrapperElement(), empty = isEmpty(cm);\n    wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\") + (empty ? \" CodeMirror-empty\" : \"\");\n\n    if (empty) setPlaceholder(cm);\n    else clearPlaceholder(cm);\n  }\n\n  function isEmpty(cm) {\n    return (cm.lineCount() === 1) && (cm.getLine(0) === \"\");\n  }\n});\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","mod","define","amd","CodeMirror","clearPlaceholder","cm","state","placeholder","parentNode","removeChild","setPlaceholder","elt","document","createElement","style","cssText","direction","getOption","className","placeHolder","createTextNode","appendChild","display","lineSpace","insertBefore","firstChild","onBlur","isEmpty","onChange","wrapper","getWrapperElement","empty","replace","lineCount","getLine","defineOption","val","old","prev","Init","on","off","hasFocus"]
}
