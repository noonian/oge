{
"version":3,
"file":"module$node_modules$codemirror$addon$search$matchesonscrollbar.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/codemirror/addon/search/matchesonscrollbar.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$addon$search$matchesonscrollbar\"] = function(global,process,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"./searchcursor\"), require(\"../scroll/annotatescrollbar\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"./searchcursor\", \"../scroll/annotatescrollbar\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineExtension(\"showMatchesOnScrollbar\", function(query, caseFold, options) {\n    if (typeof options == \"string\") options = {className: options};\n    if (!options) options = {};\n    return new SearchAnnotation(this, query, caseFold, options);\n  });\n\n  function SearchAnnotation(cm, query, caseFold, options) {\n    this.cm = cm;\n    this.options = options;\n    var annotateOptions = {listenForChanges: false};\n    for (var prop in options) annotateOptions[prop] = options[prop];\n    if (!annotateOptions.className) annotateOptions.className = \"CodeMirror-search-match\";\n    this.annotation = cm.annotateScrollbar(annotateOptions);\n    this.query = query;\n    this.caseFold = caseFold;\n    this.gap = {from: cm.firstLine(), to: cm.lastLine() + 1};\n    this.matches = [];\n    this.update = null;\n\n    this.findMatches();\n    this.annotation.update(this.matches);\n\n    var self = this;\n    cm.on(\"change\", this.changeHandler = function(_cm, change) { self.onChange(change); });\n  }\n\n  var MAX_MATCHES = 1000;\n\n  SearchAnnotation.prototype.findMatches = function() {\n    if (!this.gap) return;\n    for (var i = 0; i < this.matches.length; i++) {\n      var match = this.matches[i];\n      if (match.from.line >= this.gap.to) break;\n      if (match.to.line >= this.gap.from) this.matches.splice(i--, 1);\n    }\n    var cursor = this.cm.getSearchCursor(this.query, CodeMirror.Pos(this.gap.from, 0), this.caseFold);\n    var maxMatches = this.options && this.options.maxMatches || MAX_MATCHES;\n    while (cursor.findNext()) {\n      var match = {from: cursor.from(), to: cursor.to()};\n      if (match.from.line >= this.gap.to) break;\n      this.matches.splice(i++, 0, match);\n      if (this.matches.length > maxMatches) break;\n    }\n    this.gap = null;\n  };\n\n  function offsetLine(line, changeStart, sizeChange) {\n    if (line <= changeStart) return line;\n    return Math.max(changeStart, line + sizeChange);\n  }\n\n  SearchAnnotation.prototype.onChange = function(change) {\n    var startLine = change.from.line;\n    var endLine = CodeMirror.changeEnd(change).line;\n    var sizeChange = endLine - change.to.line;\n    if (this.gap) {\n      this.gap.from = Math.min(offsetLine(this.gap.from, startLine, sizeChange), change.from.line);\n      this.gap.to = Math.max(offsetLine(this.gap.to, startLine, sizeChange), change.from.line);\n    } else {\n      this.gap = {from: change.from.line, to: endLine + 1};\n    }\n\n    if (sizeChange) for (var i = 0; i < this.matches.length; i++) {\n      var match = this.matches[i];\n      var newFrom = offsetLine(match.from.line, startLine, sizeChange);\n      if (newFrom != match.from.line) match.from = CodeMirror.Pos(newFrom, match.from.ch);\n      var newTo = offsetLine(match.to.line, startLine, sizeChange);\n      if (newTo != match.to.line) match.to = CodeMirror.Pos(newTo, match.to.ch);\n    }\n    clearTimeout(this.update);\n    var self = this;\n    this.update = setTimeout(function() { self.updateAfterChange(); }, 250);\n  };\n\n  SearchAnnotation.prototype.updateAfterChange = function() {\n    this.findMatches();\n    this.annotation.update(this.matches);\n  };\n\n  SearchAnnotation.prototype.clear = function() {\n    this.cm.off(\"change\", this.changeHandler);\n    this.annotation.clear();\n  };\n});\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","mod","define","amd","CodeMirror","SearchAnnotation","cm","query","caseFold","options","annotateOptions","listenForChanges","prop","className","annotation","annotateScrollbar","gap","from","firstLine","to","lastLine","matches","update","findMatches","self","on","changeHandler","this.changeHandler","_cm","change","onChange","offsetLine","line","changeStart","sizeChange","Math","max","defineExtension","prototype","SearchAnnotation.prototype.findMatches","i","length","match","splice","cursor","getSearchCursor","Pos","maxMatches","MAX_MATCHES","findNext","SearchAnnotation.prototype.onChange","startLine","endLine","changeEnd","min","newFrom","ch","newTo","clearTimeout","setTimeout","updateAfterChange","SearchAnnotation.prototype.updateAfterChange","clear","SearchAnnotation.prototype.clear","off"]
}
