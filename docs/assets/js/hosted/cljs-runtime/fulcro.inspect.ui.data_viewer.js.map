{"version":3,"file":"fulcro.inspect.ui.data_viewer.js","sources":["fulcro/inspect/ui/data_viewer.cljs"],"mappings":"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","names":["fulcro.inspect.ui.data-viewer/vec-max-inline","fulcro.inspect.ui.data-viewer/sequential-max-inline","fulcro.inspect.ui.data-viewer/map-max-inline","fulcro.inspect.ui.data-viewer/children-expandable-paths","x","lookup","paths","cljs.core/seq","vec__44461","seq__44462","first__44463","cljs.core/first","cljs.core/next","map__44464","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","e","p","t","cljs.core/sequential?","cljs.core/set?","sub-paths","cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2","i","cljs.core/coll?","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core.into.cljs$core$IFn$_invoke$arity$3","cljs.core.map.cljs$core$IFn$_invoke$arity$1","cljs.core/map?","cljs.core.keep.cljs$core$IFn$_invoke$arity$2","p__44466","vec__44467","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","k","cljs.core/-add-method","fulcro.client.mutations/mutate","env44477","_","p__44478","map__44479","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","env","path","propagate?","map__44481","state","ref","open?","cljs.core/deref","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic","content","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","toggled","cljs.core/not","G__44483","p1__44476#","cljs.core/PersistentVector","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic","cljs.core/update-in","cljs.core/update","cljs.core/merge","fulcro.inspect.ui.data-viewer/keyable?","cljs.core/Keyword","cljs.core/boolean?","cljs.core/Symbol","cljs.core/uuid?","fulcro.client.primitives/tempid?","cljs.core/vector?","cljs.core/count","p__44484","map__44485","fulcro.inspect.ui.data-viewer/render-ordered-list","css","path-action","linkable?","input","iter__4292__auto__","s__44488","cljs.core/LazySeq","temp__5457__auto__","cljs.core/chunked-seq?","c__4290__auto__","size__4291__auto__","b__44490","cljs.core/chunk-buffer","i__44489","vec__44491","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__44487","cljs.core/chunk-rest","vec__44497","cljs.core/cons","cljs.core/rest","cljs.core.map.cljs$core$IFn$_invoke$arity$3","cljs.core/vector","cljs.core.range.cljs$core$IFn$_invoke$arity$0","fulcro.client.dom/macro-create-element*","fulcro.util/force-children","and__3911__auto__","G__44494","G__44500","G__44495","G__44496","G__44501","G__44502","fulcro.inspect.ui.data-viewer/render-data","cljs.core.update.cljs$core$IFn$_invoke$arity$4","cljs.core/conj","p__44505","map__44506","fulcro.inspect.ui.data-viewer/render-sequential","expanded","toggle","open-close","static?","p1__44504#","s__44509","b__44511","i__44510","vec__44512","iter__44508","vec__44517","cljs.core.take.cljs$core$IFn$_invoke$arity$2","G__44515","G__44516","G__44520","G__44521","cljs.core/second","fulcro.inspect.ui.data-viewer/render-vector","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","fulcro.inspect.ui.data-viewer/render-list","fulcro.inspect.ui.data-viewer/render-set","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","p__44524","map__44525","fulcro.inspect.ui.data-viewer/render-map","elide-one?","p1__44523#","cljs.core/empty?","cljs.core/every?","cljs.core/keys","cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2","cljs.core.comp.cljs$core$IFn$_invoke$arity$2","cljs.core/str","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","p__44527","vec__44528","v","G__44531","G__44532","G__44533","G__44534","G__44535","G__44536","G__44537","cljs.core/concat","or__3922__auto__","G__44539","cljs.core/vec","cljs.core/butlast","p__44540","vec__44541","G__44544","G__44545","cljs.core.interpose.cljs$core$IFn$_invoke$arity$2","p__44547","map__44548","p1__44546#","cljs.core.update.cljs$core$IFn$_invoke$arity$3","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","cljs.core/list?","fulcro.inspect.ui.data-viewer/css-triangle","fulcro.inspect.ui.core/label-font-family","fulcro.inspect.ui.core/label-font-size","fulcro.inspect.ui.data-viewer/css-code-font","this__38666__auto__","js/React.Component","goog.object/clone","js/React.Component.prototype","x44554","this__38521__auto__","goog.object/set","next-props__38522__auto__","next-state__38523__auto__","ident__38530__auto__","fulcro.client.primitives/ident","fulcro.client.primitives/props","next-ident__38531__auto__","fulcro.client.primitives/-next-props","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","idxr__38532__auto__","fulcro.client.primitives/get-reconciler","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","indexes__38533__auto__","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4","cljs.core/disj","cljs.core.fnil.cljs$core$IFn$_invoke$arity$2","fulcro.client.primitives/merge-pending-props!","fulcro.client.primitives/merge-pending-state!","fulcro.client.primitives/*blindly-render*","next-children__38524__auto__","goog.object/get","G__44556","fulcro.client.primitives/FulcroProps","fulcro.client.primitives/unwrap","current-props__38525__auto__","next-props-stale?__38526__auto__","fulcro.client.primitives/get-basis-time","props-changed?__38527__auto__","state-changed?__38528__auto__","G__44557","G__44558","children-changed?__38529__auto__","r__38537__auto__","cfg__38538__auto__","st__38539__auto__","indexer__38536__auto__","cljs.core/dissoc","fulcro.client.impl.protocols/drop-component!","prev-props__38534__auto__","prev-state__38535__auto__","fulcro.client.primitives/clear-prev-props!","fulcro.client.impl.protocols/index-component!","this__38520__auto__","*reconciler*44559","fulcro.client.primitives/*reconciler*","*depth*44560","fulcro.client.primitives/*depth*","*shared*44561","fulcro.client.primitives/*shared*","*instrument*44562","fulcro.client.primitives/*instrument*","*parent*44563","fulcro.client.primitives/*parent*","fulcro.client.primitives/depth","fulcro.client.primitives.shared.cljs$core$IFn$_invoke$arity$1","fulcro.client.primitives/instrument","x44568","x44569","this__38669__auto__","writer__38670__auto__","opt__38671__auto__","cljs.core/-write","fulcro.inspect.ui.data-viewer/DataViewer","cljs.core/random-uuid","props","this","map__44564","map__44565","fulcro.client.primitives.get_computed.cljs$core$IFn$_invoke$arity$1","fulcro-css.css/get-classnames","p1__44551#","p2__44550#","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1","cljs.core/List","cljs.core/array-map","fulcro.client.primitives.transact_BANG_.cljs$core$IFn$_invoke$arity$2","factory","fulcro.client.primitives.factory.cljs$core$IFn$_invoke$arity$1","var_args","args__4502__auto__","len__4499__auto__","i__4500__auto__","argseq__4503__auto__","cljs.core/IndexedSeq","fulcro.inspect.ui.data-viewer/data-viewer","p__44578","vec__44579","seq44576","G__44577","self__4486__auto__","computed","G__44582","fulcro.client.primitives/computed","cljs.core/chunk-first"],"sourcesContent":["(ns fulcro.inspect.ui.data-viewer\n  (:require [fulcro.client.mutations :as mutations]\n            [fulcro-css.css :as css]\n            [fulcro.inspect.ui.core :as ui]\n            [fulcro.inspect.helpers :as h]\n            [fulcro.client.dom :as dom]\n            [fulcro.client.primitives :as fp]))\n\n(declare DataViewer)\n\n(def vec-max-inline 2)\n(def sequential-max-inline 5)\n(def map-max-inline 10)\n\n(defn children-expandable-paths [x]\n  (loop [lookup [{:e x :p []}]\n         paths  []]\n    (if (seq lookup)\n      (let [[{:keys [e p]} & t] lookup]\n        (cond\n          (or (sequential? e) (set? e))\n          (let [sub-paths (keep-indexed (fn [i x] (if (coll? x) {:e x :p (conj p i)})) e)]\n            (recur (into [] (concat t sub-paths))\n              (into paths (map :p) sub-paths)))\n\n          (map? e)\n          (let [sub-paths (keep (fn [[k x]] (if (coll? x) {:e x :p (conj p k)})) e)]\n            (recur (into [] (concat t sub-paths))\n              (into paths (map :p) sub-paths)))\n\n          :else\n          (recur t paths)))\n      paths)))\n\n(mutations/defmutation toggle [{::keys [path propagate?]}]\n  (action [env]\n    (let [{:keys [state ref]} env\n          open?   (get-in @state (conj ref ::expanded path))\n          content (get-in @state (concat ref [::content] path))\n          toggled (not open?)\n          paths   (cond-> {path toggled}\n                    propagate? (into (map #(vector (into path %) toggled)) (children-expandable-paths\n                                                                             content)))]\n      (swap! state update-in ref update ::expanded merge paths))))\n\n(defn keyable? [x]\n  (or (nil? x)\n      (string? x)\n      (keyword? x)\n      (number? x)\n      (boolean? x)\n      (symbol? x)\n      (uuid? x)\n      (fp/tempid? x)\n      (and (vector? x)\n           (<= (count x) vec-max-inline))))\n\n(declare render-data)\n\n(defn render-ordered-list [{:keys [css path path-action linkable?] :as input} content]\n  (for [[x i] (map vector content (range))]\n    (dom/div #js {:key i :className (:list-item css)}\n      (dom/div #js {:className (:list-item-index css)}\n        (if (and linkable? path-action)\n          (dom/div #js {:className (:path-action css)\n                        :onClick   #(path-action (conj path i))}\n            (str i))\n          (str i)))\n      (render-data (update input :path conj i) x))))\n\n(defn render-sequential [{:keys [css expanded path toggle open-close static?] :as input} content]\n  (dom/div #js {:className (:data-row css)}\n    (if (and (not static?) (> (count content) vec-max-inline))\n      (dom/div #js {:onClick   #(toggle % path)\n                    :className (:toggle-button css)}\n        (if (expanded path)\n          \"\u25bc\"\n          \"\u25b6\")))\n\n    (cond\n      (expanded path)\n      (dom/div #js {:className (:list-container css)}\n        (render-ordered-list input content))\n\n      :else\n      (dom/div #js {:className (:list-inline css)}\n        (first open-close)\n        (for [[x i] (map vector (take sequential-max-inline content) (range))]\n          (dom/div #js {:key i :className (:list-inline-item css)}\n            (render-data (update input :path conj i) x)))\n        (if (> (count content) sequential-max-inline)\n          (dom/div #js {:className (:list-inline-item css)} \"\u2026\"))\n        (second open-close)))))\n\n(defn render-vector [input content]\n  (render-sequential (assoc input :open-close [\"[\" \"]\"] :linkable? true) content))\n\n(defn render-list [input content]\n  (render-sequential (assoc input :open-close [\"(\" \")\"] :linkable? true) content))\n\n(defn render-set [input content]\n  (render-sequential (assoc input :open-close [\"#{\" \"}\"]) content))\n\n(defn render-map [{:keys [css expanded path toggle path-action elide-one? static?] :as input} content]\n  (dom/div #js {:className (:data-row css)}\n    (if (and (not static?)\n             (or (not elide-one?)\n                 (> 1 (count content))))\n      (dom/div #js {:onClick   #(toggle % path)\n                    :className (:toggle-button css)}\n        (if (expanded path)\n          \"\u25bc\"\n          \"\u25b6\")))\n\n    (cond\n      (empty? content)\n      \"{}\"\n\n      (expanded path)\n      (if (every? keyable? (keys content))\n        (dom/div #js {:className (:map-container css)}\n          (->> content\n               (sort-by (comp str first))\n               (mapv (fn [[k v]]\n                       (if (expanded (conj path k))\n                         [(dom/div #js {:key (str k \"-key\")}\n                            (dom/div #js {:className (:list-item-index css)}\n                              (if path-action\n                                (dom/div #js {:className (:path-action css)\n                                              :onClick   #(path-action (conj path k))}\n                                  (render-data input k))\n                                (render-data input k))))\n                          (dom/div #js {:key (str k \"-key-space\")})\n                          (dom/div #js {:className (:map-expanded-item css)\n                                        :key       (str k \"-value\")} (render-data (update input :path conj k) v))]\n                         [(dom/div #js {:key (str k \"-key\")}\n                            (dom/div #js {:className (:list-item-index css)}\n                              (if path-action\n                                (dom/div #js {:className (:path-action css)\n                                              :onClick   #(path-action (conj path k))}\n                                  (render-data input k))\n                                (render-data input k))))\n                          (dom/div #js {:key (str k \"-value\")} (render-data (update input :path conj k) v))])))\n               (apply concat)))\n\n        (dom/div #js {:className (:list-container css)}\n          (render-ordered-list input content)))\n\n      (or (expanded (vec (butlast path)))\n          (empty? path))\n      (dom/div #js {:className (:list-inline css)}\n        \"{\"\n        (->> content\n             (sort-by (comp str first))\n             (take map-max-inline)\n             (mapv (fn [[k v]]\n                     [(dom/div #js {:className (:map-inline-key-item css) :key (str k \"-key\")} (render-data input k))\n                      (dom/div #js {:className (:map-inline-value-item css) :key (str k \"-value\")} (render-data (update input :path conj k) v))]))\n             (interpose \", \")\n             (apply concat))\n        (if (> (count content) map-max-inline)\n          \", \")\n        (if (> (count content) map-max-inline)\n          (dom/div #js {:className (:list-inline-item css)} \"\u2026\"))\n        \"}\")\n\n      :else\n      \"{\u2026}\")))\n\n(defn render-data [{:keys [css] :as input} content]\n  (let [input (update input :expanded #(or % {}))]\n    (cond\n      (nil? content)\n      (dom/div #js {:className (:nil css)} \"nil\")\n\n      (string? content)\n      (dom/div #js {:className (:string css)} (pr-str content))\n\n      (keyword? content)\n      (dom/div #js {:className (:keyword css)} (str content))\n\n      (symbol? content)\n      (dom/div #js {:className (:symbol css)} (str content))\n\n      (number? content)\n      (dom/div #js {:className (:number css)} (str content))\n\n      (boolean? content)\n      (dom/div #js {:className (:boolean css)} (str content))\n\n      (vector? content)\n      (render-vector input content)\n\n      (list? content)\n      (render-list input content)\n\n      (set? content)\n      (render-set input content)\n\n      (map? content)\n      (render-map input content)\n\n      :else\n      (dom/div #js {:className (:unknown css)} (str content)))))\n\n(def css-triangle\n  {:font-family    ui/label-font-family\n   :font-size      ui/label-font-size\n   :color          \"#8f8f8f\"\n   :cursor         \"pointer\"\n   :vertical-align \"middle\"\n   :margin-right   \"3px\"})\n\n(def css-code-font\n  {:font-family \"'courier new', monospace\"\n   :font-size   \"12px\"\n   :white-space \"nowrap\"})\n\n(fp/defui ^:once DataViewer\n  static fp/InitialAppState\n  (initial-state [_ content] {::id       (random-uuid)\n                              ::content  content\n                              ::expanded {}})\n\n  static fp/Ident\n  (ident [_ props] [::id (::id props)])\n\n  static fp/IQuery\n  (query [_] [::id ::content ::expanded])\n\n  static css/CSS\n  (local-rules [_]\n    [[:.container css-code-font]\n     [:.nil {:color \"#808080\"}]\n     [:.string {:color \"#c41a16\"}]\n     [:.keyword {:color \"#881391\"}]\n     [:.symbol {:color \"#134f91\"}]\n     [:.number {:color \"#1c00cf\"}]\n     [:.boolean {:color \"#009999\"}]\n\n     [:.data-row {:display     \"flex\"\n                  :margin-left \"3px\"}]\n\n     [:.list-inline {:display \"flex\"}]\n     [:.list-inline-item {:margin \"0 4px\"}]\n\n     [:.list-container {:padding          \"3px 12px\"\n                        :border-top       \"2px solid rgba(60, 90, 60, 0.1)\"\n                        :margin           \"0px 1px 1px\"\n                        :background-color \"rgba(100, 255, 100, 0.08)\"}]\n\n     [:.toggle-button css-triangle]\n\n     [:.list-item {:display     \"flex\"\n                   :align-items \"flex-start\"}]\n     [:.list-item-index {:background    \"#dddddd\"\n                         :border-right  \"2px solid rgba(100, 100, 100, 0.2)\"\n                         :min-width     \"35px\"\n                         :margin-bottom \"1px\"\n                         :margin-right  \"5px\"\n                         :padding       \"0 3px\"}]\n\n     [:.map-container {:padding               \"3px 12px\"\n                       :border-top            \"2px solid rgba(60, 90, 60, 0.1)\"\n                       :margin                \"0px 1px 1px\"\n                       :background-color      \"rgba(100, 255, 100, 0.08)\"\n\n                       :display               \"grid\"\n                       :grid-template-columns \"max-content 1fr\"}]\n\n     [:.map-expanded-item {:grid-column-start \"1\"\n                           :grid-column-end   \"3\"}]\n\n     [:.map-inline-key-item {:margin-left \"4px\"}]\n     [:.map-inline-value-item {:margin-left \"8px\"}]\n\n     [:.path-action {:cursor \"pointer\"}\n      [:&:hover\n       [:div {:text-decoration \"underline\"}]]]])\n  (include-children [_] [])\n\n  Object\n  (render [this]\n    (let [{::keys [content expanded elide-one? static?] :as props} (fp/props this)\n          {::keys [path-action]} (fp/get-computed props)\n          css (css/get-classnames DataViewer)]\n      (dom/div #js {:className (:container css)}\n        (render-data {:expanded    expanded\n                      :static?     static?\n                      :elide-one?  elide-one?\n                      :toggle      #(fp/transact! this [`(toggle {::path       ~%2\n                                                                  ::propagate? ~(or (.-altKey %)\n                                                                                    (.-metaKey %))})])\n                      :css         css\n                      :path        []\n                      :path-action path-action}\n          content)))))\n\n(let [factory (fp/factory DataViewer)]\n  (defn data-viewer [props & [computed]]\n    (factory (fp/computed props computed))))\n"]}