{
"version":3,
"file":"module$node_modules$codemirror$addon$fold$brace_fold.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,qDAAA,CAAyE,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAwC,CAIxH,SAAQ,CAACC,CAAD,CAAM,CACS,QAAtB,EAAI,MAAOD,EAAX,EAAmD,QAAnD,EAAkC,MAAOD,EAAzC,CACEE,CAAA,CAAIH,CAAA,CAAQ,+CAAR,CAAJ,CADF,CAE0B,UAArB,EAAI,MAAOI,OAAX,EAAmCA,MAAAC,IAAnC,CACHD,MAAA,CAAO,CAAC,sBAAD,CAAP,CAAiCD,CAAjC,CADG,CAGHA,CAAA,CAAIG,UAAJ,CANW,CAAd,CAAD,CAOG,QAAQ,CAACA,CAAD,CAAa,CAGxBA,CAAAC,eAAA,CAA0B,MAA1B,CAAkC,OAAlC,CAA2C,QAAQ,CAACC,CAAD,CAAKC,CAAL,CAAY,CAI7DC,QAASA,EAAW,CAACC,CAAD,CAAS,CAC3B,IAD2B,IAClBC,EAAKH,CAAAI,GADa,CACHC,EAAO,CAA/B,CAAA,CAAA,CAEE,GADIC,CACA,CADc,CAAN,EAAAH,CAAA,CAAW,EAAX,CAAeI,CAAAC,YAAA,CAAqBN,CAArB,CAA6BC,CAA7B,CAAkC,CAAlC,CACvB,CAAU,EAAV,EAAAG,CAAJ,CAAiB,CACf,GAAY,CAAZ,EAAID,CAAJ,CAAe,KACfA,EAAA,CAAO,CACPF,EAAA,CAAKI,CAAAE,OAHU,CAAjB,IAAA,CAMA,GAAY,CAAZ,EAAIJ,CAAJ,EAAiBC,CAAjB,CAAyBN,CAAAI,GAAzB,CAAmC,KACnCM,EAAA,CAAYX,CAAAY,eAAA,CAAkBd,CAAAe,IAAA,CAAeC,CAAf,CAAqBP,CAArB;AAA6B,CAA7B,CAAlB,CACZ,IAAI,CAAC,mBAAAQ,KAAA,CAAyBJ,CAAzB,CAAL,CAA0C,MAAOJ,EAAP,CAAe,CACpD,GAAAA,CATL,CAHyB,CAJgC,IACzDO,EAAOb,CAAAa,KADkD,CACtCN,EAAWR,CAAAgB,QAAA,CAAWF,CAAX,CAD2B,CAEzDH,CAFyD,CAoBzDM,EAAa,GApB4C,CAoBvCC,EAAW,GApB4B,CAoBvBC,EAAUjB,CAAA,CAAY,GAAZ,CACjC,KAAf,EAAIiB,CAAJ,GACEF,CACA,CADa,GACb,CADkBC,CAClB,CAD6B,GAC7B,CAAAC,CAAA,CAAUjB,CAAA,CAAY,GAAZ,CAFZ,CAKA,IAAe,IAAf,EAAIiB,CAAJ,CAAA,CA1B6D,IA2BzDC,EAAQ,CA3BiD,CA2B9CC,EAAWrB,CAAAqB,SAAA,EA3BmC,CA4B7CC,EAAIR,CAApB,EAAA,CAAO,IAAA,CAAmBQ,CAAnB,EAAwBD,CAAxB,CAAkC,EAAEC,CAApC,CAEL,IAF4C,IACxCC,EAAOvB,CAAAgB,QAAA,CAAWM,CAAX,CADiC,CAClBE,EAAMF,CAAA,EAAKR,CAAL,CAAYK,CAAZ,CAAsB,CACtD,CAAA,CAAA,CAAS,CAAA,IACHM,EAAWF,CAAAG,QAAA,CAAaT,CAAb,CAAyBO,CAAzB,CAA+BG,EAAAA,CAAYJ,CAAAG,QAAA,CAAaR,CAAb,CAAuBM,CAAvB,CAC3C,EAAf,CAAIC,CAAJ,GAAkBA,CAAlB,CAA6BF,CAAAb,OAA7B,CACgB,EAAhB,CAAIiB,CAAJ,GAAmBA,CAAnB,CAA+BJ,CAAAb,OAA/B,CACAc,EAAA,CAAMI,IAAAC,IAAA,CAASJ,CAAT,CAAmBE,CAAnB,CACN,IAAIH,CAAJ,EAAWD,CAAAb,OAAX,CAAwB,KACxB,IAAIV,CAAAY,eAAA,CAAkBd,CAAAe,IAAA,CAAeS,CAAf,CAAkBE,CAAlB,CAAwB,CAAxB,CAAlB,CAAJ,EAAqDb,CAArD,CACE,GAAIa,CAAJ,EAAWC,CAAX,CAAqB,EAAEL,CAAvB,KACK,IAAI,CAAC,EAAEA,CAAP,CAAc,CAAE,IAAAU,EAAMR,CAAG,KAAAS,EAAQP,CAAK,OAAM,CAA9B,CAErB,EAAEA,CAVK,CAaX,GAAW,IAAX,EAAIM,CAAJ,GAAmBhB,CAAnB,EAA2BgB,CAA3B,EAAkCC,CAAlC,EAA2CZ,CAA3C,EACA,MAAO,CAACa,KAAMlC,CAAAe,IAAA,CAAeC,CAAf,CAAqBK,CAArB,CAAP,CACCc,GAAInC,CAAAe,IAAA,CAAeiB,CAAf,CAAoBC,CAApB,CADL,CAlBP,CA1B6D,CAA/D,CAgDAjC,EAAAC,eAAA,CAA0B,MAA1B;AAAkC,QAAlC,CAA4C,QAAQ,CAACC,CAAD,CAAKC,CAAL,CAAY,CAC9DiC,QAASA,EAAS,CAACpB,CAAD,CAAO,CACvB,GAAIA,CAAJ,CAAWd,CAAAmC,UAAA,EAAX,EAA6BrB,CAA7B,CAAoCd,CAAAqB,SAAA,EAApC,CAAmD,MAAO,KAC1D,KAAIpB,EAAQD,CAAAoC,WAAA,CAActC,CAAAe,IAAA,CAAeC,CAAf,CAAqB,CAArB,CAAd,CACP,KAAAC,KAAA,CAAUd,CAAAoC,OAAV,CAAL,GAA8BpC,CAA9B,CAAsCD,CAAAoC,WAAA,CAActC,CAAAe,IAAA,CAAeC,CAAf,CAAqBb,CAAA6B,IAArB,CAAiC,CAAjC,CAAd,CAAtC,CACA,IAAkB,SAAlB,EAAI7B,CAAAqC,KAAJ,EAA+C,QAA/C,EAA+BrC,CAAAoC,OAA/B,CAAyD,MAAO,KAJzC,KAMdf,EAAIR,CAAb,KAAmByB,CAAnB,CAAuBX,IAAAC,IAAA,CAAS7B,CAAAqB,SAAA,EAAT,CAAwBP,CAAxB,CAA+B,EAA/B,CAAvB,CAA2DQ,CAA3D,EAAgEiB,CAAhE,CAAmE,EAAEjB,CAArE,CAAwE,CACtE,IAA0BkB,EAAfxC,CAAAgB,QAAAO,CAAWD,CAAXC,CAAsBG,QAAA,CAAa,GAAb,CACjC,IAAa,EAAb,EAAIc,CAAJ,CAAgB,MAAO,CAACrB,QAASlB,CAAA6B,IAAV,CAAqBA,IAAKhC,CAAAe,IAAA,CAAeS,CAAf,CAAkBkB,CAAlB,CAA1B,CAF+C,CANjD,CAYrBC,CAAAA,CAAYxC,CAAAa,KAb8C,KAalC4B,EAAMR,CAAA,CAAUO,CAAV,CAb4B,CAaNE,CACxD,IAAI,CAACD,CAAL,EAAYR,CAAA,CAAUO,CAAV,CAAsB,CAAtB,CAAZ,GAA0CE,CAA1C,CAAiDT,CAAA,CAAUO,CAAV,CAAsB,CAAtB,CAAjD,GAA8EE,CAAAb,IAAAhB,KAA9E,EAA+F2B,CAA/F,CAA2G,CAA3G,CACE,MAAO,KACT,KAASX,CAAT,CAAeY,CAAAZ,IAAf,CAAA,CAAA,CAA0B,CACxB,IAAIc,EAAOV,CAAA,CAAUJ,CAAAhB,KAAV,CAAqB,CAArB,CACX,IAAY,IAAZ,EAAI8B,CAAJ,CAAkB,KAClBd,EAAA,CAAMc,CAAAd,IAHkB,CAK1B,MAAO,CAACE,KAAMhC,CAAA6C,QAAA,CAAW/C,CAAAe,IAAA,CAAe4B,CAAf;AAA0BC,CAAAvB,QAA1B,CAAwC,CAAxC,CAAX,CAAP,CAA+Dc,GAAIH,CAAnE,CArBuD,CAAhE,CAwBAhC,EAAAC,eAAA,CAA0B,MAA1B,CAAkC,SAAlC,CAA6C,QAAQ,CAACC,CAAD,CAAKC,CAAL,CAAY,CAC/D6C,QAASA,EAAU,CAAChC,CAAD,CAAO,CACxB,GAAIA,CAAJ,CAAWd,CAAAmC,UAAA,EAAX,EAA6BrB,CAA7B,CAAoCd,CAAAqB,SAAA,EAApC,CAAmD,MAAO,KAC1D,KAAIpB,EAAQD,CAAAoC,WAAA,CAActC,CAAAe,IAAA,CAAeC,CAAf,CAAqB,CAArB,CAAd,CACP,KAAAC,KAAA,CAAUd,CAAAoC,OAAV,CAAL,GAA8BpC,CAA9B,CAAsCD,CAAAoC,WAAA,CAActC,CAAAe,IAAA,CAAeC,CAAf,CAAqBb,CAAA6B,IAArB,CAAiC,CAAjC,CAAd,CAAtC,CACA,IAAkB,MAAlB,EAAI7B,CAAAqC,KAAJ,EAAwD,UAAxD,EAA4BrC,CAAAoC,OAAAU,MAAA,CAAmB,CAAnB,CAAsB,CAAtB,CAA5B,CAAoE,MAAO9C,EAAAA,MAAP,CAAqB,CAJjE,CAOtBwC,CAAAA,CAAYxC,CAAAa,KAAhB,KAA4B4B,EAAMI,CAAA,CAAWL,CAAX,CAClC,IAAW,IAAX,EAAIC,CAAJ,EAAgD,IAAhD,EAAmBI,CAAA,CAAWL,CAAX,CAAuB,CAAvB,CAAnB,CAAsD,MAAO,KAC7D,KAAK,IAAIX,EAAMW,CAAf,CAEc,IAFd,EACaK,CAAAF,CAAWd,CAAXc,CAAiB,CAAjBA,CADb,CAAA,CAGE,EAAEd,CAEJ,OAAO,CAACE,KAAMlC,CAAAe,IAAA,CAAe4B,CAAf,CAA0BC,CAA1B,CAAgC,CAAhC,CAAP,CACCT,GAAIjC,CAAA6C,QAAA,CAAW/C,CAAAe,IAAA,CAAeiB,CAAf,CAAX,CADL,CAfwD,CAAjE,CA3EwB,CAPxB,CAJyH;",
"sources":["node_modules/codemirror/addon/fold/brace-fold.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$addon$fold$brace_fold\"] = function(global,process,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.registerHelper(\"fold\", \"brace\", function(cm, start) {\n  var line = start.line, lineText = cm.getLine(line);\n  var tokenType;\n\n  function findOpening(openCh) {\n    for (var at = start.ch, pass = 0;;) {\n      var found = at <= 0 ? -1 : lineText.lastIndexOf(openCh, at - 1);\n      if (found == -1) {\n        if (pass == 1) break;\n        pass = 1;\n        at = lineText.length;\n        continue;\n      }\n      if (pass == 1 && found < start.ch) break;\n      tokenType = cm.getTokenTypeAt(CodeMirror.Pos(line, found + 1));\n      if (!/^(comment|string)/.test(tokenType)) return found + 1;\n      at = found - 1;\n    }\n  }\n\n  var startToken = \"{\", endToken = \"}\", startCh = findOpening(\"{\");\n  if (startCh == null) {\n    startToken = \"[\", endToken = \"]\";\n    startCh = findOpening(\"[\");\n  }\n\n  if (startCh == null) return;\n  var count = 1, lastLine = cm.lastLine(), end, endCh;\n  outer: for (var i = line; i <= lastLine; ++i) {\n    var text = cm.getLine(i), pos = i == line ? startCh : 0;\n    for (;;) {\n      var nextOpen = text.indexOf(startToken, pos), nextClose = text.indexOf(endToken, pos);\n      if (nextOpen < 0) nextOpen = text.length;\n      if (nextClose < 0) nextClose = text.length;\n      pos = Math.min(nextOpen, nextClose);\n      if (pos == text.length) break;\n      if (cm.getTokenTypeAt(CodeMirror.Pos(i, pos + 1)) == tokenType) {\n        if (pos == nextOpen) ++count;\n        else if (!--count) { end = i; endCh = pos; break outer; }\n      }\n      ++pos;\n    }\n  }\n  if (end == null || line == end && endCh == startCh) return;\n  return {from: CodeMirror.Pos(line, startCh),\n          to: CodeMirror.Pos(end, endCh)};\n});\n\nCodeMirror.registerHelper(\"fold\", \"import\", function(cm, start) {\n  function hasImport(line) {\n    if (line < cm.firstLine() || line > cm.lastLine()) return null;\n    var start = cm.getTokenAt(CodeMirror.Pos(line, 1));\n    if (!/\\S/.test(start.string)) start = cm.getTokenAt(CodeMirror.Pos(line, start.end + 1));\n    if (start.type != \"keyword\" || start.string != \"import\") return null;\n    // Now find closing semicolon, return its position\n    for (var i = line, e = Math.min(cm.lastLine(), line + 10); i <= e; ++i) {\n      var text = cm.getLine(i), semi = text.indexOf(\";\");\n      if (semi != -1) return {startCh: start.end, end: CodeMirror.Pos(i, semi)};\n    }\n  }\n\n  var startLine = start.line, has = hasImport(startLine), prev;\n  if (!has || hasImport(startLine - 1) || ((prev = hasImport(startLine - 2)) && prev.end.line == startLine - 1))\n    return null;\n  for (var end = has.end;;) {\n    var next = hasImport(end.line + 1);\n    if (next == null) break;\n    end = next.end;\n  }\n  return {from: cm.clipPos(CodeMirror.Pos(startLine, has.startCh + 1)), to: end};\n});\n\nCodeMirror.registerHelper(\"fold\", \"include\", function(cm, start) {\n  function hasInclude(line) {\n    if (line < cm.firstLine() || line > cm.lastLine()) return null;\n    var start = cm.getTokenAt(CodeMirror.Pos(line, 1));\n    if (!/\\S/.test(start.string)) start = cm.getTokenAt(CodeMirror.Pos(line, start.end + 1));\n    if (start.type == \"meta\" && start.string.slice(0, 8) == \"#include\") return start.start + 8;\n  }\n\n  var startLine = start.line, has = hasInclude(startLine);\n  if (has == null || hasInclude(startLine - 1) != null) return null;\n  for (var end = startLine;;) {\n    var next = hasInclude(end + 1);\n    if (next == null) break;\n    ++end;\n  }\n  return {from: CodeMirror.Pos(startLine, has + 1),\n          to: cm.clipPos(CodeMirror.Pos(end))};\n});\n\n});\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","mod","define","amd","CodeMirror","registerHelper","cm","start","findOpening","openCh","at","ch","pass","found","lineText","lastIndexOf","length","tokenType","getTokenTypeAt","Pos","line","test","getLine","startToken","endToken","startCh","count","lastLine","i","text","pos","nextOpen","indexOf","nextClose","Math","min","end","endCh","from","to","hasImport","firstLine","getTokenAt","string","type","e","semi","startLine","has","prev","next","clipPos","hasInclude","slice"]
}
